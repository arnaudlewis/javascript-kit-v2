(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("prismic-javascript", [], factory);
	else if(typeof exports === 'object')
		exports["prismic-javascript"] = factory();
	else
		root["prismic-javascript"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 10);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/* unknown exports provided */
/* all exports used */
/*!****************************!*\
  !*** ./src/experiments.ts ***!
  \****************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar Variation = (function () {\n    function Variation(data) {\n        this.data = {};\n        this.data = data;\n    }\n    Variation.prototype.id = function () {\n        return this.data.id;\n    };\n    Variation.prototype.ref = function () {\n        return this.data.ref;\n    };\n    Variation.prototype.label = function () {\n        return this.data.label;\n    };\n    return Variation;\n}());\nexports.Variation = Variation;\nvar Experiment = (function () {\n    function Experiment(data) {\n        this.data = {};\n        this.data = data;\n        this.variations = (data.variations || []).map(function (v) {\n            new Variation(v);\n        });\n    }\n    Experiment.prototype.id = function () {\n        return this.data.id;\n    };\n    Experiment.prototype.googleId = function () {\n        return this.data.ref;\n    };\n    Experiment.prototype.name = function () {\n        return this.data.label;\n    };\n    return Experiment;\n}());\nexports.Experiment = Experiment;\nvar Experiments = (function () {\n    function Experiments(data) {\n        if (data) {\n            this.drafts = (data.drafts || []).map(function (exp) {\n                new Experiment(exp);\n            });\n            this.running = (data.running || []).map(function (exp) {\n                new Experiment(exp);\n            });\n        }\n    }\n    Experiments.prototype.current = function () {\n        return this.running.length > 0 ? this.running[0] : null;\n    };\n    Experiments.prototype.refFromCookie = function (cookie) {\n        if (!cookie || cookie.trim() === \"\")\n            return null;\n        var splitted = cookie.trim().split(\" \");\n        if (splitted.length < 2)\n            return null;\n        var expId = splitted[0];\n        var varIndex = parseInt(splitted[1], 10);\n        var exp = this.running.filter(function (exp) {\n            return exp.googleId() == expId && exp.variations.length > varIndex;\n        })[0];\n        return exp ? exp.variations[varIndex].ref() : null;\n    };\n    return Experiments;\n}());\nexports.Experiments = Experiments;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9leHBlcmltZW50cy50cz85MjA2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBpbnRlcmZhY2UgSUV4cGVyaW1lbnQge1xuICB2YXJpYXRpb25zOiBJVmFyaWF0aW9uW107XG4gIGRhdGE6IGFueTtcblxuICBpZCgpOiBzdHJpbmc7XG4gIGdvb2dsZUlkKCk6IHN0cmluZztcbiAgbmFtZSgpOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSVZhcmlhdGlvbiB7XG4gIGRhdGE6IGFueTtcblxuICBpZCgpOiBzdHJpbmc7XG4gIHJlZigpOiBzdHJpbmc7XG4gIGxhYmVsKCk6IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJRXhwZXJpbWVudHMge1xuICBkcmFmdHM6IElFeHBlcmltZW50W107XG4gIHJ1bm5pbmc6IElFeHBlcmltZW50W107XG5cbiAgY3VycmVudCgpOiBJRXhwZXJpbWVudCB8IG51bGw7XG4gIHJlZkZyb21Db29raWUoY29va2llOiBzdHJpbmcpOiBzdHJpbmcgfCBudWxsO1xufVxuXG5leHBvcnQgY2xhc3MgVmFyaWF0aW9uIGltcGxlbWVudHMgSVZhcmlhdGlvbiB7XG4gIGRhdGE6IGFueSA9IHt9O1xuXG4gIGNvbnN0cnVjdG9yKGRhdGE6IGFueSkge1xuICAgIHRoaXMuZGF0YSA9IGRhdGE7XG4gIH1cblxuICBpZCgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLmRhdGEuaWQ7XG4gIH1cblxuICByZWYoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5kYXRhLnJlZjtcbiAgfVxuXG4gIGxhYmVsKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuZGF0YS5sYWJlbDtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgRXhwZXJpbWVudCBpbXBsZW1lbnRzIElFeHBlcmltZW50IHtcbiAgdmFyaWF0aW9uczogSVZhcmlhdGlvbltdO1xuICBkYXRhOiBhbnkgPSB7fTtcblxuICBjb25zdHJ1Y3RvcihkYXRhOiBhbnkpIHtcbiAgICB0aGlzLmRhdGEgPSBkYXRhO1xuICAgIHRoaXMudmFyaWF0aW9ucyA9IChkYXRhLnZhcmlhdGlvbnMgfHwgW10pLm1hcCgodjogYW55KSA9PiB7XG4gICAgICBuZXcgVmFyaWF0aW9uKHYpO1xuICAgIH0pO1xuICB9XG5cbiAgaWQoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5kYXRhLmlkO1xuICB9XG5cbiAgZ29vZ2xlSWQoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5kYXRhLnJlZjtcbiAgfVxuXG4gIG5hbWUoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5kYXRhLmxhYmVsO1xuICB9XG59XG5leHBvcnQgY2xhc3MgRXhwZXJpbWVudHMge1xuICBkcmFmdHM6IElFeHBlcmltZW50W107XG4gIHJ1bm5pbmc6IElFeHBlcmltZW50W107XG5cbiAgY29uc3RydWN0b3IoZGF0YTogYW55KSB7XG4gICAgaWYoZGF0YSkge1xuICAgICAgdGhpcy5kcmFmdHMgPSAoZGF0YS5kcmFmdHMgfHwgW10pLm1hcCgoZXhwOiBhbnkpID0+IHtcbiAgICAgICAgbmV3IEV4cGVyaW1lbnQoZXhwKTtcbiAgICAgIH0pO1xuICAgICAgdGhpcy5ydW5uaW5nID0gKGRhdGEucnVubmluZyB8fCBbXSkubWFwKChleHA6IGFueSkgPT4ge1xuICAgICAgICBuZXcgRXhwZXJpbWVudChleHApO1xuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgY3VycmVudCgpOiBJRXhwZXJpbWVudCB8IG51bGwge1xuICAgIHJldHVybiB0aGlzLnJ1bm5pbmcubGVuZ3RoID4gMCA/IHRoaXMucnVubmluZ1swXSA6IG51bGw7XG4gIH1cbiAgcmVmRnJvbUNvb2tpZShjb29raWU6IHN0cmluZyk6IHN0cmluZyB8IG51bGwge1xuICAgIGlmICghY29va2llIHx8IGNvb2tpZS50cmltKCkgPT09IFwiXCIpIHJldHVybiBudWxsO1xuICAgIGNvbnN0IHNwbGl0dGVkID0gY29va2llLnRyaW0oKS5zcGxpdChcIiBcIik7XG4gICAgaWYgKHNwbGl0dGVkLmxlbmd0aCA8IDIpIHJldHVybiBudWxsO1xuICAgIGNvbnN0IGV4cElkID0gc3BsaXR0ZWRbMF07XG4gICAgY29uc3QgdmFySW5kZXggPSBwYXJzZUludChzcGxpdHRlZFsxXSwgMTApO1xuICAgIGNvbnN0IGV4cCA9IHRoaXMucnVubmluZy5maWx0ZXIoZnVuY3Rpb24oZXhwKSB7XG4gICAgICByZXR1cm4gZXhwLmdvb2dsZUlkKCkgPT0gZXhwSWQgJiYgZXhwLnZhcmlhdGlvbnMubGVuZ3RoID4gdmFySW5kZXg7XG4gICAgfSlbMF07XG4gICAgcmV0dXJuIGV4cCA/IGV4cC52YXJpYXRpb25zW3ZhckluZGV4XS5yZWYoKSA6IG51bGw7XG4gIH1cbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9leHBlcmltZW50cy50cyJdLCJtYXBwaW5ncyI6Ijs7QUF5QkE7QUFHQTtBQUZBO0FBR0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFsQkE7QUFvQkE7QUFJQTtBQUZBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUF0QkE7QUF1QkE7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQTdCQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 1 */
/* unknown exports provided */
/* all exports used */
/*!***************************!*\
  !*** ./src/predicates.ts ***!
  \***************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar Operator;\n(function (Operator) {\n    Operator[Operator[\"at\"] = 0] = \"at\";\n    Operator[Operator[\"not\"] = 1] = \"not\";\n    Operator[Operator[\"missing\"] = 2] = \"missing\";\n    Operator[Operator[\"has\"] = 3] = \"has\";\n    Operator[Operator[\"any\"] = 4] = \"any\";\n    Operator[Operator[\"in\"] = 5] = \"in\";\n    Operator[Operator[\"fulltext\"] = 6] = \"fulltext\";\n    Operator[Operator[\"similar\"] = 7] = \"similar\";\n    Operator[Operator[\"number.gt\"] = 8] = \"number.gt\";\n    Operator[Operator[\"number.lt\"] = 9] = \"number.lt\";\n    Operator[Operator[\"number.inRange\"] = 10] = \"number.inRange\";\n    Operator[Operator[\"date.before\"] = 11] = \"date.before\";\n    Operator[Operator[\"date.after\"] = 12] = \"date.after\";\n    Operator[Operator[\"date.between\"] = 13] = \"date.between\";\n    Operator[Operator[\"date.day-of-month\"] = 14] = \"date.day-of-month\";\n    Operator[Operator[\"date.day-of-month-after\"] = 15] = \"date.day-of-month-after\";\n    Operator[Operator[\"date.day-of-month-before\"] = 16] = \"date.day-of-month-before\";\n    Operator[Operator[\"date.day-of-week\"] = 17] = \"date.day-of-week\";\n    Operator[Operator[\"date.day-of-week-after\"] = 18] = \"date.day-of-week-after\";\n    Operator[Operator[\"date.day-of-week-before\"] = 19] = \"date.day-of-week-before\";\n    Operator[Operator[\"date.month\"] = 20] = \"date.month\";\n    Operator[Operator[\"date.month-before\"] = 21] = \"date.month-before\";\n    Operator[Operator[\"date.month-after\"] = 22] = \"date.month-after\";\n    Operator[Operator[\"date.year\"] = 23] = \"date.year\";\n    Operator[Operator[\"date.hour\"] = 24] = \"date.hour\";\n    Operator[Operator[\"date.hour-before\"] = 25] = \"date.hour-before\";\n    Operator[Operator[\"date.hour-after\"] = 26] = \"date.hour-after\";\n    Operator[Operator[\"geopoint.near\"] = 27] = \"geopoint.near\";\n})(Operator || (Operator = {}));\nvar AtPredicate = (function () {\n    function AtPredicate(fragment, value) {\n        this.op = Operator.at;\n        this.fragment = fragment;\n        this.value = value;\n    }\n    AtPredicate.prototype.toString = function () {\n        return \"[:d = \" + this.op.valueOf + \"(\\\"\" + this.fragment + \"\\\", \\\"\" + this.value + \"\\\")]\";\n    };\n    return AtPredicate;\n}());\nvar NotPredicate = (function () {\n    function NotPredicate(fragment, value) {\n        this.op = Operator.not;\n        this.fragment = fragment;\n        this.value = value;\n    }\n    NotPredicate.prototype.toString = function () {\n        return \"[:d = \" + this.op.valueOf + \"(\\\"\" + this.fragment + \"\\\", \\\"\" + this.value + \"\\\")]\";\n    };\n    return NotPredicate;\n}());\nvar MissingPredicate = (function () {\n    function MissingPredicate(fragment) {\n        this.op = Operator.missing;\n        this.fragment = fragment;\n    }\n    MissingPredicate.prototype.toString = function () {\n        return \"[:d = \" + this.op.valueOf + \"(\\\"\" + this.fragment + \"\\\")]\";\n    };\n    return MissingPredicate;\n}());\nvar HasPredicate = (function () {\n    function HasPredicate(fragment) {\n        this.op = Operator.has;\n        this.fragment = fragment;\n    }\n    HasPredicate.prototype.toString = function () {\n        return \"[:d = \" + this.op.valueOf + \"(\\\"\" + this.fragment + \"\\\")]\";\n    };\n    return HasPredicate;\n}());\nvar AnyPredicate = (function () {\n    function AnyPredicate(fragment, values) {\n        this.op = Operator.any;\n        this.fragment = fragment;\n        this.values = values;\n    }\n    AnyPredicate.prototype.toString = function () {\n        return \"[:d = \" + this.op.valueOf + \"(\\\"\" + this.fragment + \"\\\", [\" + this.values.join(',') + \"])]\";\n    };\n    return AnyPredicate;\n}());\nvar InPredicate = (function () {\n    function InPredicate(fragment, values) {\n        this.op = Operator[\"in\"];\n        this.fragment = fragment;\n        this.values = values;\n    }\n    InPredicate.prototype.toString = function () {\n        return \"[:d = \" + this.op.valueOf + \"(\\\"\" + this.fragment + \"\\\", [\" + this.values.join(',') + \"])]\";\n    };\n    return InPredicate;\n}());\nvar FulltextPredicate = (function () {\n    function FulltextPredicate(fragment, value) {\n        this.op = Operator.fulltext;\n        this.fragment = fragment;\n        this.value = value;\n    }\n    FulltextPredicate.prototype.toString = function () {\n        return \"[:d = \" + this.op.valueOf + \"(\\\"\" + this.fragment + \"\\\", \\\"\" + this.value + \"\\\")]\";\n    };\n    return FulltextPredicate;\n}());\nvar SimilarPredicate = (function () {\n    function SimilarPredicate(documentId, maxResults) {\n        this.op = Operator.similar;\n        this.documentId = documentId;\n        this.maxResults = maxResults;\n    }\n    SimilarPredicate.prototype.toString = function () {\n        return \"[:d = \" + this.op.valueOf + \"(\\\"\" + this.documentId + \"\\\", \" + this.maxResults + \")]\";\n    };\n    return SimilarPredicate;\n}());\nvar GtPredicate = (function () {\n    function GtPredicate(fragment, value) {\n        this.op = Operator[\"number.gt\"];\n        this.fragment = fragment;\n        this.value = value;\n    }\n    GtPredicate.prototype.toString = function () {\n        return \"[:d = \" + this.op.valueOf + \"(\\\"\" + this.fragment + \"\\\", \" + this.value + \")]\";\n    };\n    return GtPredicate;\n}());\nvar LtPredicate = (function () {\n    function LtPredicate(fragment, value) {\n        this.op = Operator[\"number.lt\"];\n        this.fragment = fragment;\n        this.value = value;\n    }\n    LtPredicate.prototype.toString = function () {\n        return \"[:d = \" + this.op.valueOf + \"(\\\"\" + this.fragment + \"\\\", \" + this.value + \")]\";\n    };\n    return LtPredicate;\n}());\nvar InRangePredicate = (function () {\n    function InRangePredicate(fragment, before, after) {\n        this.op = Operator[\"number.inRange\"];\n        this.fragment = fragment;\n        this.before = before;\n        this.after = after;\n    }\n    InRangePredicate.prototype.toString = function () {\n        return \"[:d = \" + this.op.valueOf + \"(\\\"\" + this.fragment + \"\\\", \" + this.before + \", \" + this.after + \")]\";\n    };\n    return InRangePredicate;\n}());\nvar DateBeforePredicate = (function () {\n    function DateBeforePredicate(fragment, before) {\n        this.op = Operator[\"date.before\"];\n        this.fragment = fragment;\n        this.before = before;\n    }\n    DateBeforePredicate.prototype.toString = function () {\n        return \"[:d = \" + this.op.valueOf + \"(\\\"\" + this.fragment + \"\\\", \" + this.before.getTime() + \")]\";\n    };\n    return DateBeforePredicate;\n}());\nvar DateAfterPredicate = (function () {\n    function DateAfterPredicate(fragment, after) {\n        this.op = Operator[\"date.after\"];\n        this.fragment = fragment;\n        this.after = after;\n    }\n    DateAfterPredicate.prototype.toString = function () {\n        return \"[:d = \" + this.op.valueOf + \"(\\\"\" + this.fragment + \"\\\", \" + this.after.getTime() + \")]\";\n    };\n    return DateAfterPredicate;\n}());\nvar DateBetweenPredicate = (function () {\n    function DateBetweenPredicate(fragment, before, after) {\n        this.op = Operator[\"date.between\"];\n        this.fragment = fragment;\n        this.before = before;\n        this.after = after;\n    }\n    DateBetweenPredicate.prototype.toString = function () {\n        return \"[:d = \" + this.op.valueOf + \"(\\\"\" + this.fragment + \"\\\", \" + this.before.getTime() + \", \" + this.after.getTime() + \")]\";\n    };\n    return DateBetweenPredicate;\n}());\nvar DayOfMonthPredicate = (function () {\n    function DayOfMonthPredicate(fragment, day) {\n        this.op = Operator[\"date.day-of-month\"];\n        this.fragment = fragment;\n        this.day = day;\n    }\n    DayOfMonthPredicate.prototype.toString = function () {\n        return \"[:d = \" + this.op.valueOf + \"(\\\"\" + this.fragment + \"\\\", \" + this.day + \")]\";\n    };\n    return DayOfMonthPredicate;\n}());\nvar DayOfMonthAfterPredicate = (function () {\n    function DayOfMonthAfterPredicate(fragment, day) {\n        this.op = Operator[\"date.day-of-month-after\"];\n        this.fragment = fragment;\n        this.day = day;\n    }\n    DayOfMonthAfterPredicate.prototype.toString = function () {\n        return \"[:d = \" + this.op.valueOf + \"(\\\"\" + this.fragment + \"\\\", \" + this.day + \")]\";\n    };\n    return DayOfMonthAfterPredicate;\n}());\nvar DayOfMonthBeforePredicate = (function () {\n    function DayOfMonthBeforePredicate(fragment, day) {\n        this.op = Operator[\"date.day-of-month-before\"];\n        this.fragment = fragment;\n        this.day = day;\n    }\n    DayOfMonthBeforePredicate.prototype.toString = function () {\n        return \"[:d = \" + this.op.valueOf + \"(\\\"\" + this.fragment + \"\\\", \" + this.day + \")]\";\n    };\n    return DayOfMonthBeforePredicate;\n}());\nvar DayOfWeekPredicate = (function () {\n    function DayOfWeekPredicate(fragment, day) {\n        this.op = Operator[\"date.day-of-week\"];\n        this.fragment = fragment;\n        this.day = day;\n    }\n    DayOfWeekPredicate.prototype.toString = function () {\n        return \"[:d = \" + this.op.valueOf + \"(\\\"\" + this.fragment + \"\\\", \" + this.day + \")]\";\n    };\n    return DayOfWeekPredicate;\n}());\nvar DayOfWeekAfterPredicate = (function () {\n    function DayOfWeekAfterPredicate(fragment, day) {\n        this.op = Operator[\"date.day-of-week-after\"];\n        this.fragment = fragment;\n        this.day = day;\n    }\n    DayOfWeekAfterPredicate.prototype.toString = function () {\n        return \"[:d = \" + this.op.valueOf + \"(\\\"\" + this.fragment + \"\\\", \" + this.day + \")]\";\n    };\n    return DayOfWeekAfterPredicate;\n}());\nvar DayOfWeekBeforePredicate = (function () {\n    function DayOfWeekBeforePredicate(fragment, day) {\n        this.op = Operator[\"date.day-of-week-before\"];\n        this.fragment = fragment;\n        this.day = day;\n    }\n    DayOfWeekBeforePredicate.prototype.toString = function () {\n        return \"[:d = \" + this.op.valueOf + \"(\\\"\" + this.fragment + \"\\\", \" + this.day + \")]\";\n    };\n    return DayOfWeekBeforePredicate;\n}());\nvar MonthPredicate = (function () {\n    function MonthPredicate(fragment, month) {\n        this.op = Operator[\"date.month\"];\n        this.fragment = fragment;\n        this.month = month;\n    }\n    MonthPredicate.prototype.toString = function () {\n        if (typeof this.month === 'number') {\n            return \"[:d = \" + this.op.valueOf + \"(\\\"\" + this.fragment + \"\\\", \" + this.month + \")]\";\n        }\n        else {\n            return \"[:d = \" + this.op.valueOf + \"(\\\"\" + this.fragment + \"\\\", \\\"\" + this.month + \"\\\")]\";\n        }\n    };\n    return MonthPredicate;\n}());\nvar MonthBeforePredicate = (function () {\n    function MonthBeforePredicate(fragment, month) {\n        this.op = Operator[\"date.month-before\"];\n        this.fragment = fragment;\n        this.month = month;\n    }\n    MonthBeforePredicate.prototype.toString = function () {\n        if (typeof this.month === 'number') {\n            return \"[:d = \" + this.op.valueOf + \"(\\\"\" + this.fragment + \"\\\", \" + this.month + \")]\";\n        }\n        else {\n            return \"[:d = \" + this.op.valueOf + \"(\\\"\" + this.fragment + \"\\\", \\\"\" + this.month + \"\\\")]\";\n        }\n    };\n    return MonthBeforePredicate;\n}());\nvar MonthAfterPredicate = (function () {\n    function MonthAfterPredicate(fragment, month) {\n        this.op = Operator[\"date.month-after\"];\n        this.fragment = fragment;\n        this.month = month;\n    }\n    MonthAfterPredicate.prototype.toString = function () {\n        if (typeof this.month === 'number') {\n            return \"[:d = \" + this.op.valueOf + \"(\\\"\" + this.fragment + \"\\\", \" + this.month + \")]\";\n        }\n        else {\n            return \"[:d = \" + this.op.valueOf + \"(\\\"\" + this.fragment + \"\\\", \\\"\" + this.month + \"\\\")]\";\n        }\n    };\n    return MonthAfterPredicate;\n}());\nvar YearPredicate = (function () {\n    function YearPredicate(fragment, year) {\n        this.op = Operator[\"date.year\"];\n        this.fragment = fragment;\n        this.year = year;\n    }\n    YearPredicate.prototype.toString = function () {\n        return \"[:d = \" + this.op.valueOf + \"(\\\"\" + this.fragment + \"\\\", \" + this.year + \")]\";\n    };\n    return YearPredicate;\n}());\nvar HourPredicate = (function () {\n    function HourPredicate(fragment, hour) {\n        this.op = Operator[\"date.hour\"];\n        this.fragment = fragment;\n        this.hour = hour;\n    }\n    HourPredicate.prototype.toString = function () {\n        return \"[:d = \" + this.op.valueOf + \"(\\\"\" + this.fragment + \"\\\", \" + this.hour + \")]\";\n    };\n    return HourPredicate;\n}());\nvar HourBeforePredicate = (function () {\n    function HourBeforePredicate(fragment, hour) {\n        this.op = Operator[\"date.hour-before\"];\n        this.fragment = fragment;\n        this.hour = hour;\n    }\n    HourBeforePredicate.prototype.toString = function () {\n        return \"[:d = \" + this.op.valueOf + \"(\\\"\" + this.fragment + \"\\\", \" + this.hour + \")]\";\n    };\n    return HourBeforePredicate;\n}());\nvar HourAfterPredicate = (function () {\n    function HourAfterPredicate(fragment, hour) {\n        this.op = Operator[\"date.hour-after\"];\n        this.fragment = fragment;\n        this.hour = hour;\n    }\n    HourAfterPredicate.prototype.toString = function () {\n        return \"[:d = \" + this.op.valueOf + \"(\\\"\" + this.fragment + \"\\\", \" + this.hour + \")]\";\n    };\n    return HourAfterPredicate;\n}());\nvar NearPredicate = (function () {\n    function NearPredicate(fragment, latitude, longitude, radius) {\n        this.op = Operator[\"geopoint.near\"];\n        this.fragment = fragment;\n        this.latitude = latitude;\n        this.longitude = longitude;\n        this.radius = radius;\n    }\n    NearPredicate.prototype.toString = function () {\n        return \"[:d = \" + this.op.valueOf + \"(\\\"\" + this.fragment + \"\\\", \" + this.latitude + \", \" + this.longitude + \", \" + this.radius + \")]\";\n    };\n    return NearPredicate;\n}());\nexports.Predicates = {\n    at: AtPredicate,\n    not: NotPredicate,\n    missing: MissingPredicate,\n    has: HasPredicate,\n    any: AnyPredicate,\n    \"in\": InPredicate,\n    fulltext: FulltextPredicate,\n    similar: SimilarPredicate,\n    gt: GtPredicate,\n    lt: LtPredicate,\n    inRange: InRangePredicate,\n    before: DateBeforePredicate,\n    after: DateAfterPredicate,\n    between: DateBetweenPredicate,\n    dayOfMonth: DayOfMonthPredicate,\n    dayOfMonthAfter: DayOfMonthAfterPredicate,\n    dayOfMonthBefore: DayOfMonthBeforePredicate,\n    dayOfWeek: DayOfWeekPredicate,\n    dayOfWeekAfter: DayOfWeekAfterPredicate,\n    dayOfWeekBefore: DayOfWeekBeforePredicate,\n    month: MonthPredicate,\n    monthBefore: MonthBeforePredicate,\n    monthAfter: MonthAfterPredicate,\n    year: YearPredicate,\n    hour: HourPredicate,\n    hourBefore: HourBeforePredicate,\n    hourAfter: HourAfterPredicate,\n    near: NearPredicate\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 2 */
/* unknown exports provided */
/* all exports used */
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar documents_1 = __webpack_require__(/*! ./documents */ 6);\nvar api_1 = __webpack_require__(/*! ./api */ 4);\nvar Predicates = __webpack_require__(/*! ./predicates */ 1);\nvar experiments_1 = __webpack_require__(/*! ./experiments */ 0);\nfunction getApi(url, options) {\n    var api = new api_1.Api(url, options);\n    //Use cached api data if available\n    return new Promise(function (resolve, reject) {\n        var cb = function (err, value, xhr) {\n            if (options.complete)\n                options.complete(err, value, xhr);\n            if (err) {\n                reject(err);\n            }\n            else {\n                resolve(value);\n            }\n        };\n        api.get(function (err, data) {\n            if (!err && data) {\n                api.data = data;\n                api.bookmarks = data.bookmarks;\n                api.experiments = new experiments_1.Experiments(data.experiments);\n            }\n            cb(err, api);\n        });\n        return api;\n    });\n}\nexports[\"default\"] = {\n    experimentCookie: api_1.ExperimentCookie,\n    previewCookie: api_1.PreviewCookie,\n    Document: documents_1.Document,\n    SearchForm: api_1.SearchForm,\n    Form: api_1.Form,\n    Experiments: experiments_1.Experiments,\n    Predicates: Predicates,\n    api: getApi\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9pbmRleC50cz9lYWMzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERvY3VtZW50LCBHcm91cERvYyB9IGZyb20gXCIuL2RvY3VtZW50c1wiO1xuaW1wb3J0IHtcbiAgSUFwaU9wdGlvbnMsXG4gIElBcGksXG4gIEFwaSxcbiAgRXhwZXJpbWVudENvb2tpZSxcbiAgUHJldmlld0Nvb2tpZSxcbiAgRm9ybSxcbiAgU2VhcmNoRm9ybVxufSBmcm9tIFwiLi9hcGlcIjtcblxuaW1wb3J0IHsgRGVmYXVsdFJlcXVlc3RIYW5kbGVyIH0gZnJvbSAnLi9yZXF1ZXN0JztcbmltcG9ydCAqIGFzIFByZWRpY2F0ZXMgZnJvbSAnLi9wcmVkaWNhdGVzJztcbmltcG9ydCB7IEV4cGVyaW1lbnRzIH0gZnJvbSAnLi9leHBlcmltZW50cyc7XG5cbmZ1bmN0aW9uIGdldEFwaSh1cmw6IHN0cmluZywgb3B0aW9uczogSUFwaU9wdGlvbnMpOiBQcm9taXNlPElBcGk+IHtcbiAgdmFyIGFwaSA9IG5ldyBBcGkodXJsLCBvcHRpb25zKTtcbiAgLy9Vc2UgY2FjaGVkIGFwaSBkYXRhIGlmIGF2YWlsYWJsZVxuICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgdmFyIGNiID0gZnVuY3Rpb24oZXJyOiBFcnJvciB8IG51bGwsIHZhbHVlPzogYW55LCB4aHI/OiBhbnkpIHtcbiAgICAgIGlmIChvcHRpb25zLmNvbXBsZXRlKSBvcHRpb25zLmNvbXBsZXRlKGVyciwgdmFsdWUsIHhocik7XG4gICAgICBpZiAoZXJyKSB7XG4gICAgICAgIHJlamVjdChlcnIpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmVzb2x2ZSh2YWx1ZSk7XG4gICAgICB9XG4gICAgfTtcbiAgICBhcGkuZ2V0KGZ1bmN0aW9uIChlcnI6IEVycm9yLCBkYXRhOiBhbnkpIHtcbiAgICAgIGlmICghZXJyICYmIGRhdGEpIHtcbiAgICAgICAgYXBpLmRhdGEgPSBkYXRhO1xuICAgICAgICBhcGkuYm9va21hcmtzID0gZGF0YS5ib29rbWFya3M7XG4gICAgICAgIGFwaS5leHBlcmltZW50cyA9IG5ldyBFeHBlcmltZW50cyhkYXRhLmV4cGVyaW1lbnRzKTtcbiAgICAgIH1cblxuICAgICAgY2IoZXJyLCBhcGkpO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIGFwaTtcbiAgfSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgZXhwZXJpbWVudENvb2tpZTogRXhwZXJpbWVudENvb2tpZSxcbiAgcHJldmlld0Nvb2tpZTogUHJldmlld0Nvb2tpZSxcbiAgRG9jdW1lbnQ6IERvY3VtZW50LFxuICBTZWFyY2hGb3JtOiBTZWFyY2hGb3JtLFxuICBGb3JtOiBGb3JtLFxuICBFeHBlcmltZW50czogRXhwZXJpbWVudHMsXG4gIFByZWRpY2F0ZXM6IFByZWRpY2F0ZXMsXG4gIGFwaTogZ2V0QXBpXG59O1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2luZGV4LnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0E7QUFXQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 3 */
/* unknown exports provided */
/* all exports used */
/*!****************************************************!*\
  !*** ./~/isomorphic-fetch/fetch-npm-browserify.js ***!
  \****************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("// the whatwg-fetch polyfill installs the fetch() function\n// on the global object (window or self)\n//\n// Return that as the export for use in Webpack, Browserify etc.\n__webpack_require__(/*! whatwg-fetch */ 9);\nmodule.exports = self.fetch.bind(self);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vaXNvbW9ycGhpYy1mZXRjaC9mZXRjaC1ucG0tYnJvd3NlcmlmeS5qcz83NzIzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHRoZSB3aGF0d2ctZmV0Y2ggcG9seWZpbGwgaW5zdGFsbHMgdGhlIGZldGNoKCkgZnVuY3Rpb25cbi8vIG9uIHRoZSBnbG9iYWwgb2JqZWN0ICh3aW5kb3cgb3Igc2VsZilcbi8vXG4vLyBSZXR1cm4gdGhhdCBhcyB0aGUgZXhwb3J0IGZvciB1c2UgaW4gV2VicGFjaywgQnJvd3NlcmlmeSBldGMuXG5yZXF1aXJlKCd3aGF0d2ctZmV0Y2gnKTtcbm1vZHVsZS5leHBvcnRzID0gc2VsZi5mZXRjaC5iaW5kKHNlbGYpO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2lzb21vcnBoaWMtZmV0Y2gvZmV0Y2gtbnBtLWJyb3dzZXJpZnkuanNcbi8vIG1vZHVsZSBpZCA9IDNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 4 */
/* unknown exports provided */
/* all exports used */
/*!********************!*\
  !*** ./src/api.ts ***!
  \********************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar predicates_1 = __webpack_require__(/*! ./predicates */ 1);\nvar experiments_1 = __webpack_require__(/*! ./experiments */ 0);\nvar request_1 = __webpack_require__(/*! ./request */ 8);\nvar cache_1 = __webpack_require__(/*! ./cache */ 5);\nexports.PreviewCookie = \"io.prismic.preview\";\nexports.ExperimentCookie = \"io.prismic.experiment\";\nvar Ref = (function () {\n    function Ref(ref, label, isMaster, scheduledAt, id) {\n        this.ref = ref;\n        this.label = label;\n        this.isMaster = isMaster;\n        this.scheduledAt = scheduledAt;\n        this.id = id;\n    }\n    return Ref;\n}());\nexports.Ref = Ref;\nvar Form = (function () {\n    function Form(fields, action, name, rel, form_method, enctype) {\n        this.fields = fields;\n        this.action = action;\n        this.name = name;\n        this.rel = rel;\n        this.form_method = form_method;\n        this.enctype = enctype;\n    }\n    Form.prototype.getField = function (field) {\n        return this.fields[field];\n    };\n    Form.prototype.getFieldSafe = function (field) {\n        var f = this.fields[field];\n        if (!f)\n            throw new Error(\"Missing field \" + f + \" in form fields \" + this.fields);\n        return f;\n    };\n    return Form;\n}());\nexports.Form = Form;\nvar SearchForm = (function () {\n    function SearchForm(api, form, data) {\n        this.api = api;\n        this.form = form;\n        this.data = data || {};\n        for (var field in form.fields) {\n            if (form.getFieldSafe(field)['default']) {\n                this.data[field] = [form.fields[field]['default']];\n            }\n        }\n    }\n    SearchForm.prototype.set = function (field, value) {\n        var _this = this;\n        var fieldDesc = this.form.getField(field);\n        if (!fieldDesc)\n            throw new Error(\"Unknown field \" + field);\n        var checkedValue = function () { return value === '' || value === undefined ? null : value; };\n        var values = (function () {\n            var defaultValues = _this.data[field] || [];\n            if (fieldDesc.multiple) {\n                return checkedValue ? defaultValues.concat([checkedValue]) : defaultValues;\n            }\n            else {\n                return checkedValue ? [checkedValue] : defaultValues;\n            }\n        })();\n        return this;\n    };\n    /**\n     * Sets a ref to query on for this SearchForm. This is a mandatory\n     * method to call before calling submit(), and api.form('everything').submit()\n     * will not work.\n     */\n    SearchForm.prototype.ref = function (ref) {\n        return this.set(\"ref\", ref);\n    };\n    /**\n     * Sets a predicate-based query for this SearchForm. This is where you\n     * paste what you compose in your prismic.io API browser.\n     */\n    SearchForm.prototype.query = function (query) {\n        if (typeof query === 'string') {\n            return this.set(\"q\", query);\n        }\n        else if (query instanceof Array) {\n            var predicates = query.map(function (predicate) {\n                return predicate.toString();\n            });\n            return this.query(\"[\" + predicates.join(\"\") + \"]\");\n        }\n        else {\n            return this.query([query]);\n        }\n    };\n    /**\n     * Sets a page size to query for this SearchForm. This is an optional method.\n     *\n     * @param {number} size - The page size\n     * @returns {SearchForm} - The SearchForm itself\n     */\n    SearchForm.prototype.pageSize = function (size) {\n        return this.set(\"pageSize\", size);\n    };\n    /**\n     * Restrict the results document to the specified fields\n     */\n    SearchForm.prototype.fetch = function (fields) {\n        var strFields = fields instanceof Array ? fields.join(\",\") : fields;\n        return this.set(\"fetch\", strFields);\n    };\n    /**\n     * Include the requested fields in the DocumentLink instances in the result\n     */\n    SearchForm.prototype.fetchLinks = function (fields) {\n        var strFields = fields instanceof Array ? fields.join(\",\") : fields;\n        return this.set(\"fetchLinks\", strFields);\n    };\n    /**\n     * Sets the language to query for this SearchForm. This is an optional method.\n     */\n    SearchForm.prototype.lang = function (langCode) {\n        return this.set(\"lang\", langCode);\n    };\n    /**\n     * Sets the page number to query for this SearchForm. This is an optional method.\n     */\n    SearchForm.prototype.page = function (p) {\n        return this.set(\"page\", p);\n    };\n    /**\n     * Sets the orderings to query for this SearchForm. This is an optional method.\n     */\n    SearchForm.prototype.orderings = function (orderings) {\n        if (!orderings) {\n            return this;\n        }\n        else {\n            return this.set(\"orderings\", \"[\" + orderings.join(\",\") + \"]\");\n        }\n    };\n    /**\n     * Submits the query, and calls the callback function.\n     */\n    SearchForm.prototype.submit = function (callback) {\n        var self = this;\n        var url = this.form.action;\n        if (this.data) {\n            var sep = (url.indexOf('?') > -1 ? '&' : '?');\n            for (var key in this.data) {\n                if (this.data.hasOwnProperty(key)) {\n                    var values = this.data[key];\n                    if (values) {\n                        for (var i = 0; i < values.length; i++) {\n                            url += sep + key + '=' + encodeURIComponent(values[i]);\n                            sep = '&';\n                        }\n                    }\n                }\n            }\n        }\n        return this.api.requestHandler.request(url, callback);\n    };\n    return SearchForm;\n}());\nexports.SearchForm = SearchForm;\nvar ApiResponse = (function () {\n    function ApiResponse(page, results_per_page, results_size, total_results_size, total_pages, next_page, prev_page, results) {\n        this.page = page;\n        this.results_per_page = results_per_page;\n        this.results_size = results_size;\n        this.total_results_size = total_results_size;\n        this.total_pages = total_pages;\n        this.next_page = next_page;\n        this.prev_page = prev_page;\n        this.results = results;\n    }\n    return ApiResponse;\n}());\nexports.ApiResponse = ApiResponse;\nvar Api = (function () {\n    function Api(url, options) {\n        var opts = options || {};\n        this.accessToken = opts.accessToken;\n        this.url = url + (this.accessToken ? (url.indexOf('?') > -1 ? '&' : '?') + 'access_token=' + this.accessToken : '');\n        this.apiCache = opts.apiCache || new cache_1.DefaultApiCache();\n        this.requestHandler = opts.requestHandler || new request_1.DefaultRequestHandler();\n        this.apiCacheKey = this.url + (this.accessToken ? ('#' + this.accessToken) : '');\n        this.apiDataTTL = opts.apiDataTTL || 5;\n        return this;\n    }\n    /**\n     * Fetches data used to construct the api client, from cache if it's\n     * present, otherwise from calling the prismic api endpoint (which is\n     * then cached).\n     */\n    Api.prototype.get = function (callback) {\n        var self = this;\n        var cacheKey = this.apiCacheKey;\n        return new Promise(function (resolve, reject) {\n            var cb = function (err, value, xhr, ttl) {\n                if (callback)\n                    callback(err, value, xhr, ttl);\n                if (value)\n                    resolve(value);\n                if (err)\n                    reject(err);\n            };\n            self.apiCache.get(cacheKey, function (err, value) {\n                if (err || value) {\n                    cb(err, value);\n                    return;\n                }\n                self.requestHandler.request(self.url, function (err, value, xhr, ttl) {\n                    if (err) {\n                        cb(err, null, xhr, ttl);\n                        return;\n                    }\n                    var parsed = self.parse(value);\n                    ttl = ttl || self.apiDataTTL;\n                    self.apiCache.set(cacheKey, parsed, ttl, function (err) {\n                        cb(err, parsed, xhr, ttl);\n                    });\n                });\n            });\n        });\n    };\n    /**\n     * Cleans api data from the cache and fetches an up to date copy.\n     *\n     * @param {function} callback - Optional callback function that is called after the data has been refreshed\n     * @returns {Promise}\n     */\n    Api.prototype.refresh = function (callback) {\n        var self = this;\n        var cacheKey = this.apiCacheKey;\n        return new Promise(function (resolve, reject) {\n            var cb = function (err, value, xhr) {\n                if (callback)\n                    callback(err, value, xhr);\n                if (value)\n                    resolve(value);\n                if (err)\n                    reject(err);\n            };\n            self.apiCache.remove(cacheKey, function (err) {\n                if (err) {\n                    cb(err);\n                    return;\n                }\n                self.get(function (err, data) {\n                    if (err) {\n                        cb(err);\n                        return;\n                    }\n                    self.data = data;\n                    self.bookmarks = data.bookmarks;\n                    self.experiments = new experiments_1.Experiments(data.experiments);\n                    cb();\n                });\n            });\n        });\n    };\n    /**\n     * Parses and returns the /api document.\n     * This is for internal use, from outside this kit, you should call Prismic.Api()\n     *\n     * @param {string} data - The JSON document responded on the API's endpoint\n     * @returns {Api} - The Api object that can be manipulated\n     * @private\n     */\n    Api.prototype.parse = function (data) {\n        var _this = this;\n        // Parse the forms\n        var forms = Object.keys(data.forms || []).reduce(function (acc, key, i) {\n            if (data.forms.hasOwnProperty(key)) {\n                var f = data.forms[key];\n                if (_this.accessToken) {\n                    f.fields['access_token'] = {};\n                    f.fields['access_token']['type'] = 'string';\n                    f.fields['access_token']['default'] = _this.accessToken;\n                }\n                var form = new Form(f.name, f.fields, f.form_method, f.rel, f.enctype, f.action);\n                acc[key] = form;\n            }\n            else {\n                return acc;\n            }\n        }, {});\n        var refs = data.refs.map(function (r) {\n            return new Ref(r.ref, r.label, r.isMasterRef, r.scheduledAt, r.id);\n        }) || [];\n        var master = refs.filter(function (r) {\n            return r.isMaster === true;\n        });\n        var types = data.types;\n        var tags = data.tags;\n        if (master.length === 0) {\n            throw (\"No master ref.\");\n        }\n        return {\n            bookmarks: data.bookmarks || {},\n            refs: refs,\n            forms: forms,\n            master: master[0],\n            types: types,\n            tags: tags,\n            experiments: data.experiments,\n            oauthInitiate: data['oauth_initiate'],\n            oauthToken: data['oauth_token'],\n            quickRoutes: data.quickRoutes\n        };\n    };\n    /**\n     * Returns a useable form from its id, as described in the RESTful description of the API.\n     * For instance: api.form(\"everything\") works on every repository (as \"everything\" exists by default)\n     * You can then chain the calls: api.form(\"everything\").query('[[:d = at(document.id, \"UkL0gMuvzYUANCpf\")]]').ref(ref).submit()\n     */\n    Api.prototype.form = function (formId) {\n        var form = this.data.forms[formId];\n        if (form) {\n            return new SearchForm(this, form, {});\n        }\n        return null;\n    };\n    Api.prototype.everything = function () {\n        var f = this.form(\"everything\");\n        if (!f)\n            throw new Error(\"Missing everything form\");\n        return f;\n    };\n    /**\n     * The ID of the master ref on this prismic.io API.\n     * Do not use like this: searchForm.ref(api.master()).\n     * Instead, set your ref once in a variable, and call it when you need it; this will allow to change the ref you're viewing easily for your entire page.\n     */\n    Api.prototype.master = function () {\n        return this.data.master.ref;\n    };\n    /**\n     * Returns the ref ID for a given ref's label.\n     * Do not use like this: searchForm.ref(api.ref(\"Future release label\")).\n     * Instead, set your ref once in a variable, and call it when you need it; this will allow to change the ref you're viewing easily for your entire page.\n     */\n    Api.prototype.ref = function (label) {\n        for (var i = 0; i < this.data.refs.length; i++) {\n            if (this.data.refs[i].label == label) {\n                return this.data.refs[i].ref;\n            }\n        }\n        return null;\n    };\n    /**\n     * The current experiment, or null\n     */\n    Api.prototype.currentExperiment = function () {\n        return this.experiments.current();\n    };\n    Api.prototype.quickRoutesEnabled = function () {\n        return this.data.quickRoutes.enabled;\n    };\n    /**\n     * Retrieve quick routes definitions\n     */\n    Api.prototype.quickRoutes = function (callback) {\n        var self = this;\n        return new Promise(function (resolve, reject) {\n            this.requestHandler.request(self.data.quickRoutes.url, function (err, data, xhr) {\n                if (callback)\n                    callback(err, data, xhr);\n                if (err)\n                    reject(err);\n                if (data)\n                    resolve(data);\n            });\n        });\n    };\n    /**\n     * Query the repository\n     * @param {string|array|Predicate} the query itself\n     * @param {object} additional parameters. In NodeJS, pass the request as 'req'.\n     * @param {function} callback(err, response)\n     */\n    Api.prototype.query = function (q, optionsOrCallback, cb) {\n        var _a = typeof optionsOrCallback === 'function'\n            ? { options: {}, callback: optionsOrCallback }\n            : { options: optionsOrCallback || {}, callback: cb }, options = _a.options, callback = _a.callback;\n        var opts = options;\n        var form = this.everything();\n        for (var key in opts) {\n            form = form.set(key, opts[key]);\n        }\n        if (q) {\n            form.query(q);\n        }\n        return form.submit(callback);\n    };\n    /**\n     * Retrieve the document returned by the given query\n     * @param {string|array|Predicate} the query\n     * @param {object} additional parameters. In NodeJS, pass the request as 'req'.\n     * @param {function} callback(err, doc)\n     */\n    Api.prototype.queryFirst = function (q, optionsOrCallback, cb) {\n        var _a = typeof optionsOrCallback === 'function'\n            ? { options: {}, callback: optionsOrCallback }\n            : { options: optionsOrCallback || {}, callback: cb }, options = _a.options, callback = _a.callback;\n        var opts = options;\n        opts.page = 1;\n        opts.pageSize = 1;\n        return this.query(q, opts, function (err, response) {\n            if (callback) {\n                var result = response && response.results && response.results[0];\n                callback(err, result);\n            }\n        }).then(function (response) {\n            return response && response.results && response.results[0];\n        });\n    };\n    /**\n     * Retrieve the document with the given id\n     */\n    Api.prototype.getByID = function (id, options, callback) {\n        options = options || {};\n        if (!options.lang)\n            options.lang = '*';\n        return this.queryFirst(new predicates_1.Predicates.at('document.id', id), options, callback);\n    };\n    /**\n     * Retrieve multiple documents from an array of id\n     */\n    Api.prototype.getByIDs = function (ids, options, callback) {\n        options = options || {};\n        if (!options.lang)\n            options.lang = '*';\n        return this.query(new predicates_1.Predicates[\"in\"]('document.id', ids), options, callback);\n    };\n    /**\n     * Retrieve the document with the given uid\n     */\n    Api.prototype.getByUID = function (type, uid, options, callback) {\n        options = options || {};\n        if (!options.lang)\n            options.lang = '*';\n        return this.queryFirst(new predicates_1.Predicates.at(\"my.\" + type + \".uid\", uid), options, callback);\n    };\n    /**\n     * Retrieve the singleton document with the given type\n     */\n    Api.prototype.getSingle = function (type, options, callback) {\n        return this.queryFirst(new predicates_1.Predicates.at('document.type', type), options, callback);\n    };\n    /**\n     * Retrieve the document with the given bookmark\n     */\n    Api.prototype.getBookmark = function (bookmark, options, callback) {\n        return new Promise(function (resolve, reject) {\n            var id = this.bookmarks[bookmark];\n            if (id) {\n                resolve(id);\n            }\n            else {\n                var err = new Error(\"Error retrieving bookmarked id\");\n                if (callback)\n                    callback(err);\n                reject(err);\n            }\n        }).then(function (id) {\n            return this.getByID(id, options, callback);\n        });\n    };\n    /**\n     * Return the URL to display a given preview\n     */\n    Api.prototype.previewSession = function (token, linkResolver, defaultUrl, callback) {\n        var api = this;\n        return new Promise(function (resolve, reject) {\n            var cb = function (err, url, xhr) {\n                if (callback)\n                    callback(err, url, xhr);\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(url);\n                }\n            };\n            api.requestHandler.request(token, function (err, result, xhr) {\n                if (err) {\n                    cb(err, defaultUrl, xhr);\n                    return;\n                }\n                try {\n                    var mainDocumentId = result.mainDocument;\n                    if (!mainDocumentId) {\n                        cb(null, defaultUrl, xhr);\n                    }\n                    else {\n                        api.everything().query(new predicates_1.Predicates.at(\"document.id\", mainDocumentId)).ref(token).lang('*').submit(function (err, response) {\n                            if (err) {\n                                cb(err);\n                            }\n                            try {\n                                if (response.results.length === 0) {\n                                    cb(null, defaultUrl, xhr);\n                                }\n                                else {\n                                    cb(null, linkResolver(response.results[0]), xhr);\n                                }\n                            }\n                            catch (e) {\n                                cb(e);\n                            }\n                        });\n                    }\n                }\n                catch (e) {\n                    cb(e, defaultUrl, xhr);\n                }\n            });\n        });\n    };\n    /**\n     * Fetch a URL corresponding to a query, and parse the response as a Response object\n     */\n    Api.prototype.request = function (url, callback) {\n        var api = this;\n        var cacheKey = url + (this.accessToken ? ('#' + this.accessToken) : '');\n        var cache = this.apiCache;\n        function run(cb) {\n            cache.get(cacheKey, function (err, value) {\n                if (err || value) {\n                    cb(err, api.response(value));\n                    return;\n                }\n                api.requestHandler.request(url, function (err, documents, xhr, ttl) {\n                    if (err) {\n                        cb(err, null, xhr);\n                        return;\n                    }\n                    if (ttl) {\n                        cache.set(cacheKey, documents, ttl, function (err) {\n                            cb(err, api.response(documents));\n                        });\n                    }\n                    else {\n                        cb(null, api.response(documents));\n                    }\n                });\n            });\n        }\n        return new Promise(function (resolve, reject) {\n            run(function (err, value, xhr) {\n                if (callback)\n                    callback(err, value, xhr);\n                if (err)\n                    reject(err);\n                if (value)\n                    resolve(value);\n            });\n        });\n    };\n    Api.prototype.getNextPage = function (nextPage, callback) {\n        return this.request(nextPage + (this.accessToken ? '&access_token=' + this.accessToken : ''), callback);\n    };\n    /**\n     * JSON documents to Response object\n     */\n    Api.prototype.response = function (documents) {\n        return new ApiResponse(documents.page, documents.results_per_page, documents.results_size, documents.total_results_size, documents.total_pages, documents.next_page, documents.prev_page, documents.results || []);\n    };\n    return Api;\n}());\nexports.Api = Api;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 5 */
/* unknown exports provided */
/* all exports used */
/*!**********************!*\
  !*** ./src/cache.ts ***!
  \**********************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar lru_1 = __webpack_require__(/*! ./lru */ 7);\nvar DefaultApiCache = (function () {\n    function DefaultApiCache(limit) {\n        this.lru = lru_1.MakeLRUCache(limit);\n    }\n    DefaultApiCache.prototype.isExpired = function (key) {\n        var entryValue = this.lru.get(key, false);\n        if (entryValue) {\n            return entryValue.expiredIn !== 0 && entryValue.expiredIn < Date.now();\n        }\n        else {\n            return false;\n        }\n    };\n    DefaultApiCache.prototype.get = function (key, cb) {\n        var entryValue = this.lru.get(key, false);\n        if (entryValue && !this.isExpired(key)) {\n            cb(null, entryValue.data);\n        }\n        cb();\n    };\n    DefaultApiCache.prototype.set = function (key, value, ttl, cb) {\n        this.lru.remove(key);\n        this.lru.put(key, {\n            data: value,\n            expiredIn: ttl ? (Date.now() + (ttl * 1000)) : 0\n        });\n    };\n    DefaultApiCache.prototype.remove = function (key, cb) {\n        this.lru.remove(key);\n        cb();\n    };\n    DefaultApiCache.prototype.clear = function (cb) {\n        this.lru.removeAll();\n        cb();\n    };\n    return DefaultApiCache;\n}());\nexports.DefaultApiCache = DefaultApiCache;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9jYWNoZS50cz84N2I3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElMUlVDYWNoZSwgTWFrZUxSVUNhY2hlIH0gZnJvbSAnLi9scnUnO1xuXG5leHBvcnQgaW50ZXJmYWNlIElBcGlDYWNoZSB7XG4gIGlzRXhwaXJlZChrZXk6IFN0cmluZyk6IGJvb2xlYW47XG4gIGdldChrZXk6IHN0cmluZywgY2I6IChlcnJvciA/OiBFcnJvciB8IG51bGwsIGVudHJ5PzogYW55KSA9PiBhbnkpOiB2b2lkO1xuICBzZXQoa2V5OiBzdHJpbmcsIHZhbHVlOiBhbnksIHR0bDogbnVtYmVyLCBjYjogKGVycm9yID86IEVycm9yIHwgbnVsbCwgZW50cnk/OiBhbnkpID0+IGFueSk6IHZvaWQ7XG4gIHJlbW92ZShrZXk6IHN0cmluZywgY2I6IChlcnJvciA/OiBFcnJvciB8IG51bGwpID0+IGFueSk6IHZvaWQ7XG4gIGNsZWFyKGNiOiAoZXJyb3IgPzogRXJyb3IgfCBudWxsKSA9PiBhbnkpOiB2b2lkO1xufVxuXG5leHBvcnQgY2xhc3MgRGVmYXVsdEFwaUNhY2hlIGltcGxlbWVudHMgSUFwaUNhY2hlIHtcbiAgbHJ1OiBJTFJVQ2FjaGU7XG5cbiAgY29uc3RydWN0b3IobGltaXQgPzogbnVtYmVyKSB7XG4gICAgdGhpcy5scnUgPSBNYWtlTFJVQ2FjaGUobGltaXQpO1xuICB9XG5cbiAgaXNFeHBpcmVkKGtleTogc3RyaW5nKTogYm9vbGVhbiB7XG4gICAgY29uc3QgZW50cnlWYWx1ZSA9IHRoaXMubHJ1LmdldChrZXksIGZhbHNlKTtcbiAgICBpZihlbnRyeVZhbHVlKSB7XG4gICAgICByZXR1cm4gZW50cnlWYWx1ZS5leHBpcmVkSW4gIT09IDAgJiYgZW50cnlWYWx1ZS5leHBpcmVkSW4gPCBEYXRlLm5vdygpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgZ2V0KGtleTogc3RyaW5nLCBjYjogKGVycm9yID86IEVycm9yIHwgbnVsbCwgZW50cnk/OiBhbnkpID0+IGFueSk6IHZvaWQge1xuICAgIGNvbnN0IGVudHJ5VmFsdWUgPSB0aGlzLmxydS5nZXQoa2V5LCBmYWxzZSk7XG4gICAgaWYoZW50cnlWYWx1ZSAmJiAhdGhpcy5pc0V4cGlyZWQoa2V5KSkge1xuICAgICAgY2IobnVsbCwgZW50cnlWYWx1ZS5kYXRhKTtcbiAgICB9XG4gICAgY2IoKTtcbiAgfVxuXG4gIHNldChrZXk6IHN0cmluZywgdmFsdWU6IGFueSwgdHRsOiBudW1iZXIsIGNiOiAoZXJyb3IgPzogRXJyb3IgfCBudWxsLCBlbnRyeT86IGFueSkgPT4gYW55KTogdm9pZCB7XG4gICAgdGhpcy5scnUucmVtb3ZlKGtleSk7XG4gICAgdGhpcy5scnUucHV0KGtleSwge1xuICAgICAgZGF0YTogdmFsdWUsXG4gICAgICBleHBpcmVkSW46IHR0bCA/IChEYXRlLm5vdygpICsgKHR0bCAqIDEwMDApKSA6IDBcbiAgICB9KTtcbiAgfVxuXG4gIHJlbW92ZShrZXk6IHN0cmluZywgY2I6IChlcnJvciA/OiBFcnJvciB8IG51bGwpID0+IGFueSk6IHZvaWQge1xuICAgIHRoaXMubHJ1LnJlbW92ZShrZXkpO1xuICAgIGNiKCk7XG4gIH1cblxuICBjbGVhcihjYjogKGVycm9yID86IEVycm9yIHwgbnVsbCkgPT4gYW55KTogdm9pZCB7XG4gICAgdGhpcy5scnUucmVtb3ZlQWxsKCk7XG4gICAgY2IoKTtcbiAgfVxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2NhY2hlLnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBO0FBVUE7QUFHQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUF6Q0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 6 */
/* unknown exports provided */
/* all exports used */
/*!**************************!*\
  !*** ./src/documents.ts ***!
  \**************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar Document = (function () {\n    function Document(id, type, href, tags, slug, slugs, alternateLanguages, firstPublicationDate, lastPublicationDate, data, uid, lang) {\n        this.id = id;\n        this.uid = uid;\n        this.type = type;\n        this.href = href;\n        this.tags = tags;\n        this.slug = slug[0];\n        this.slugs = slugs;\n        this.lang = lang;\n        this.alternateLanguages = alternateLanguages;\n        this.firstPublicationDate = firstPublicationDate ? new Date(firstPublicationDate) : null;\n        this.lastPublicationDate = lastPublicationDate ? new Date(lastPublicationDate) : null,\n            this.data = data;\n    }\n    ;\n    return Document;\n}());\nexports.Document = Document;\nvar GroupDoc = (function () {\n    function GroupDoc(data) {\n        this.data = data;\n    }\n    return GroupDoc;\n}());\nexports.GroupDoc = GroupDoc;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9kb2N1bWVudHMudHM/ZjY0YSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgaW50ZXJmYWNlIElEb2N1bWVudCB7XG4gIGlkOiBzdHJpbmc7XG4gIHVpZCA/OiBzdHJpbmc7XG4gIHR5cGU6IHN0cmluZztcbiAgaHJlZjogc3RyaW5nO1xuICB0YWdzOiBzdHJpbmdbXTtcbiAgc2x1Zzogc3RyaW5nO1xuICBzbHVnczogc3RyaW5nW107XG4gIGZpcnN0UHVibGljYXRpb25EYXRlOiBEYXRlIHwgbnVsbDtcbiAgbGFzdFB1YmxpY2F0aW9uRGF0ZTogRGF0ZSB8IG51bGw7XG4gIGxhbmcgPzogc3RyaW5nO1xuICBhbHRlcm5hdGVMYW5ndWFnZXM6IHN0cmluZ1tdO1xuICBkYXRhOiBvYmplY3Q7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSUdyb3VwRG9jIHtcbiAgZGF0YTogb2JqZWN0O1xufVxuXG5leHBvcnQgY2xhc3MgRG9jdW1lbnQgaW1wbGVtZW50cyBJRG9jdW1lbnQge1xuICBpZDogc3RyaW5nO1xuICB1aWQgPzogc3RyaW5nO1xuICB0eXBlOiBzdHJpbmc7XG4gIGhyZWY6IHN0cmluZztcbiAgdGFnczogc3RyaW5nW107XG4gIHNsdWc6IHN0cmluZztcbiAgc2x1Z3M6IHN0cmluZ1tdO1xuICBsYW5nID86IHN0cmluZztcbiAgYWx0ZXJuYXRlTGFuZ3VhZ2VzOiBzdHJpbmdbXTtcbiAgZmlyc3RQdWJsaWNhdGlvbkRhdGU6IERhdGUgfCBudWxsO1xuICBsYXN0UHVibGljYXRpb25EYXRlOiBEYXRlIHwgbnVsbDtcbiAgZGF0YTogYW55O1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIGlkOiBzdHJpbmcsXG4gICAgdHlwZTogc3RyaW5nLFxuICAgIGhyZWY6IHN0cmluZyxcbiAgICB0YWdzOiBzdHJpbmdbXSxcbiAgICBzbHVnOiBzdHJpbmcsXG4gICAgc2x1Z3M6IHN0cmluZ1tdLFxuICAgIGFsdGVybmF0ZUxhbmd1YWdlczogc3RyaW5nW10sXG4gICAgZmlyc3RQdWJsaWNhdGlvbkRhdGU6IHN0cmluZyB8IG51bGwsXG4gICAgbGFzdFB1YmxpY2F0aW9uRGF0ZTogc3RyaW5nIHwgbnVsbCxcbiAgICBkYXRhOiBhbnksXG4gICAgdWlkID86IHN0cmluZyxcbiAgICBsYW5nID86IHN0cmluZ1xuICApe1xuICAgIFxuICAgIHRoaXMuaWQgPSBpZDtcbiAgICB0aGlzLnVpZCA9IHVpZDtcbiAgICB0aGlzLnR5cGUgPSB0eXBlO1xuICAgIHRoaXMuaHJlZiA9IGhyZWY7XG4gICAgdGhpcy50YWdzID0gdGFncztcbiAgICB0aGlzLnNsdWcgPSBzbHVnWzBdO1xuICAgIHRoaXMuc2x1Z3MgPSBzbHVncztcbiAgICB0aGlzLmxhbmcgPSBsYW5nO1xuICAgIHRoaXMuYWx0ZXJuYXRlTGFuZ3VhZ2VzID0gYWx0ZXJuYXRlTGFuZ3VhZ2VzO1xuICAgIHRoaXMuZmlyc3RQdWJsaWNhdGlvbkRhdGUgPSBmaXJzdFB1YmxpY2F0aW9uRGF0ZSA/IG5ldyBEYXRlKGZpcnN0UHVibGljYXRpb25EYXRlKSA6IG51bGw7XG4gICAgdGhpcy5sYXN0UHVibGljYXRpb25EYXRlID0gbGFzdFB1YmxpY2F0aW9uRGF0ZSA/IG5ldyBEYXRlKGxhc3RQdWJsaWNhdGlvbkRhdGUpIDogbnVsbCxcbiAgICB0aGlzLmRhdGEgPSBkYXRhO1xuICB9O1xufVxuXG5leHBvcnQgY2xhc3MgR3JvdXBEb2MgaW1wbGVtZW50cyBJR3JvdXBEb2Mge1xuICBkYXRhOiBhbnk7XG5cbiAgY29uc3RydWN0b3IoZGF0YTogYW55KSB7XG4gICAgdGhpcy5kYXRhID0gZGF0YTtcbiAgfVxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2RvY3VtZW50cy50cyJdLCJtYXBwaW5ncyI6Ijs7QUFtQkE7QUFjQTtBQWVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBMUNBO0FBNENBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQU5BOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 7 */
/* unknown exports provided */
/* all exports used */
/*!********************!*\
  !*** ./src/lru.ts ***!
  \********************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n* A doubly linked list-based Least Recently Used (LRU) cache. Will keep most\n* recently used items while discarding least recently used items when its limit\n* is reached.\n*\n* Licensed under MIT. Copyright (c) 2010 Rasmus Andersson <http://hunch.se/>\n* Typescript-ified by Oleksandr Nikitin <https://tvori.info>\n*\n* Illustration of the design:\n*\n*       entry             entry             entry             entry\n*       ______            ______            ______            ______\n*      | head |.newer => |      |.newer => |      |.newer => | tail |\n*      |  A   |          |  B   |          |  C   |          |  D   |\n*      |______| <= older.|______| <= older.|______| <= older.|______|\n*\n*  removed  <--  <--  <--  <--  <--  <--  <--  <--  <--  <--  <--  added\n*/\nexports.__esModule = true;\nfunction MakeLRUCache(limit) {\n    return new LRUCache(limit);\n}\nexports.MakeLRUCache = MakeLRUCache;\nfunction LRUCache(limit) {\n    // Current size of the cache. (Read-only).\n    this.size = 0;\n    // Maximum number of items this cache can hold.\n    this.limit = limit;\n    this._keymap = {};\n}\n/**\n * Put <value> into the cache associated with <key>. Returns the entry which was\n * removed to make room for the new entry. Otherwise undefined is returned\n * (i.e. if there was enough room already).\n */\nLRUCache.prototype.put = function (key, value) {\n    var entry = { key: key, value: value };\n    // Note: No protection agains replacing, and thus orphan entries. By design.\n    this._keymap[key] = entry;\n    if (this.tail) {\n        // link previous tail to the new tail (entry)\n        this.tail.newer = entry;\n        entry.older = this.tail;\n    }\n    else {\n        // we're first in -- yay\n        this.head = entry;\n    }\n    // add new entry to the end of the linked list -- it's now the freshest entry.\n    this.tail = entry;\n    if (this.size === this.limit) {\n        // we hit the limit -- remove the head\n        return this.shift();\n    }\n    else {\n        // increase the size counter\n        this.size++;\n    }\n};\n/**\n * Purge the least recently used (oldest) entry from the cache. Returns the\n * removed entry or undefined if the cache was empty.\n *\n * If you need to perform any form of finalization of purged items, this is a\n * good place to do it. Simply override/replace this function:\n *\n *   var c = new LRUCache(123);\n *   c.shift = function() {\n *     var entry = LRUCache.prototype.shift.call(this);\n *     doSomethingWith(entry);\n *     return entry;\n *   }\n */\nLRUCache.prototype.shift = function () {\n    // todo: handle special case when limit == 1\n    var entry = this.head;\n    if (entry) {\n        if (this.head.newer) {\n            this.head = this.head.newer;\n            this.head.older = undefined;\n        }\n        else {\n            this.head = undefined;\n        }\n        // Remove last strong reference to <entry> and remove links from the purged\n        // entry being returned:\n        entry.newer = entry.older = undefined;\n        // delete is slow, but we need to do this to avoid uncontrollable growth:\n        delete this._keymap[entry.key];\n    }\n    console.log('purging ', entry.key);\n    return entry;\n};\n/**\n * Get and register recent use of <key>. Returns the value associated with <key>\n * or undefined if not in cache.\n */\nLRUCache.prototype.get = function (key, returnEntry) {\n    // First, find our cache entry\n    var entry = this._keymap[key];\n    if (entry === undefined)\n        return; // Not cached. Sorry.\n    // As <key> was found in the cache, register it as being requested recently\n    if (entry === this.tail) {\n        // Already the most recently used entry, so no need to update the list\n        return returnEntry ? entry : entry.value;\n    }\n    // HEAD--------------TAIL\n    //   <.older   .newer>\n    //  <--- add direction --\n    //   A  B  C  <D>  E\n    if (entry.newer) {\n        if (entry === this.head)\n            this.head = entry.newer;\n        entry.newer.older = entry.older; // C <-- E.\n    }\n    if (entry.older)\n        entry.older.newer = entry.newer; // C. --> E\n    entry.newer = undefined; // D --x\n    entry.older = this.tail; // D. --> E\n    if (this.tail)\n        this.tail.newer = entry; // E. <-- D\n    this.tail = entry;\n    return returnEntry ? entry : entry.value;\n};\n// ----------------------------------------------------------------------------\n// Following code is optional and can be removed without breaking the core\n// functionality.\n/**\n * Check if <key> is in the cache without registering recent use. Feasible if\n * you do not want to chage the state of the cache, but only \"peek\" at it.\n * Returns the entry associated with <key> if found, or undefined if not found.\n */\nLRUCache.prototype.find = function (key) {\n    return this._keymap[key];\n};\n/**\n * Update the value of entry with <key>. Returns the old value, or undefined if\n * entry was not in the cache.\n */\nLRUCache.prototype.set = function (key, value) {\n    var oldvalue;\n    var entry = this.get(key, true);\n    if (entry) {\n        oldvalue = entry.value;\n        entry.value = value;\n    }\n    else {\n        oldvalue = this.put(key, value);\n        if (oldvalue)\n            oldvalue = oldvalue.value;\n    }\n    return oldvalue;\n};\n/**\n * Remove entry <key> from cache and return its value. Returns undefined if not\n * found.\n */\nLRUCache.prototype.remove = function (key) {\n    var entry = this._keymap[key];\n    if (!entry)\n        return;\n    delete this._keymap[entry.key]; // need to do delete unfortunately\n    if (entry.newer && entry.older) {\n        // relink the older entry with the newer entry\n        entry.older.newer = entry.newer;\n        entry.newer.older = entry.older;\n    }\n    else if (entry.newer) {\n        // remove the link to us\n        entry.newer.older = undefined;\n        // link the newer entry to head\n        this.head = entry.newer;\n    }\n    else if (entry.older) {\n        // remove the link to us\n        entry.older.newer = undefined;\n        // link the newer entry to head\n        this.tail = entry.older;\n    }\n    else {\n        this.head = this.tail = undefined;\n    }\n    this.size--;\n    return entry.value;\n};\n/** Removes all entries */\nLRUCache.prototype.removeAll = function () {\n    // This should be safe, as we never expose strong refrences to the outside\n    this.head = this.tail = undefined;\n    this.size = 0;\n    this._keymap = {};\n};\n/**\n * Return an array containing all keys of entries stored in the cache object, in\n * arbitrary order.\n */\nif (typeof Object.keys === 'function') {\n    LRUCache.prototype.keys = function () { return Object.keys(this._keymap); };\n}\nelse {\n    LRUCache.prototype.keys = function () {\n        var keys = [];\n        for (var k in this._keymap)\n            keys.push(k);\n        return keys;\n    };\n}\n/**\n * Call `fun` for each entry. Starting with the newest entry if `desc` is a true\n * value, otherwise starts with the oldest (head) enrty and moves towards the\n * tail.\n *\n * `fun` is called with 3 arguments in the context `context`:\n *   `fun.call(context, Object key, Object value, LRUCache self)`\n */\nLRUCache.prototype.forEach = function (fun, context, desc) {\n    var entry;\n    if (context === true) {\n        desc = true;\n        context = undefined;\n    }\n    else if (typeof context !== 'object')\n        context = this;\n    if (desc) {\n        entry = this.tail;\n        while (entry) {\n            fun.call(context, entry.key, entry.value, this);\n            entry = entry.older;\n        }\n    }\n    else {\n        entry = this.head;\n        while (entry) {\n            fun.call(context, entry.key, entry.value, this);\n            entry = entry.newer;\n        }\n    }\n};\n/** Returns a JSON (array) representation */\n//LRUCache.prototype.toJSON = function () {\n//    var s: IEntry[] = [], entry = this.head;\n//    while (entry) {\n//        s.push({ key: entry.key.toJSON(), value: entry.value.toJSON() });\n//        entry = entry.newer;\n//    }\n//    return s;\n//};\n/** Returns a String representation */\nLRUCache.prototype.toString = function () {\n    var s = '', entry = this.head;\n    while (entry) {\n        s += String(entry.key) + ':' + entry.value;\n        entry = entry.newer;\n        if (entry)\n            s += ' < ';\n    }\n    return s;\n};\n// Export ourselves\n//if (typeof this === 'object') this.LRUCache = LRUCache; \n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 8 */
/* unknown exports provided */
/* all exports used */
/*!************************!*\
  !*** ./src/request.ts ***!
  \************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\n__webpack_require__(/*! isomorphic-fetch */ 3);\nfunction createError(status, message) {\n    return {\n        name: \"prismic-request-error\",\n        message: message,\n        status: status\n    };\n}\n// Number of maximum simultaneous connections to the prismic server\nvar MAX_CONNECTIONS = 20;\n// Number of requests currently running (capped by MAX_CONNECTIONS)\nvar running = 0;\n// Requests in queue\nvar queue = [];\nfunction fetchRequest(url, onSuccess, onError) {\n    fetch(url, {\n        headers: {\n            'Accept': 'application/json',\n            'User-Agent': 'Prismic-javascript-kit'\n        }\n    }).then(function (response) {\n        if (~~(response.status / 100 != 2)) {\n            throw createError(response.status, \"Unexpected status code [\" + response.status + \"] on URL \" + url);\n        }\n        else {\n            return response.json().then(function (json) {\n                return {\n                    response: response,\n                    json: json\n                };\n            });\n        }\n    }).then(function (next) {\n        var response = next.response;\n        var json = next.json;\n        var cacheControl = response.headers['cache-control'];\n        var parsedCacheControl = cacheControl ? /max-age=(\\d+)/.exec(cacheControl) : null;\n        var ttl = parsedCacheControl ? parseInt(parsedCacheControl[1], 10) : undefined;\n        onSuccess({ result: json, xhr: response, ttl: ttl });\n    })[\"catch\"](function (error) {\n        onError({ error: error });\n    });\n}\nfunction processQueue() {\n    if (queue.length === 0 || running >= MAX_CONNECTIONS) {\n        return;\n    }\n    running++;\n    var next = queue.shift();\n    fetchRequest(next.url, function (_a) {\n        var result = _a.result, xhr = _a.xhr, ttl = _a.ttl;\n        running--;\n        next.callback(null, result, xhr, ttl);\n        processQueue();\n    }, function (_a) {\n        var error = _a.error;\n        next.callback(error);\n    });\n}\nvar DefaultRequestHandler = (function () {\n    function DefaultRequestHandler() {\n    }\n    DefaultRequestHandler.prototype.request = function (url, cb) {\n        queue.push({\n            'url': url,\n            'callback': cb\n        });\n        processQueue();\n    };\n    return DefaultRequestHandler;\n}());\nexports.DefaultRequestHandler = DefaultRequestHandler;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9yZXF1ZXN0LnRzPzliNTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFwiaXNvbW9ycGhpYy1mZXRjaFwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIElSZXF1ZXN0RXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIHN0YXR1czogbnVtYmVyO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVFcnJvcihzdGF0dXM6IG51bWJlciwgbWVzc2FnZTogc3RyaW5nKTogSVJlcXVlc3RFcnJvciB7XG4gIHJldHVybiB7XG4gICAgbmFtZTogXCJwcmlzbWljLXJlcXVlc3QtZXJyb3JcIixcbiAgICBtZXNzYWdlLFxuICAgIHN0YXR1czogc3RhdHVzXG4gIH1cbn1cblxuXG4vLyBOdW1iZXIgb2YgbWF4aW11bSBzaW11bHRhbmVvdXMgY29ubmVjdGlvbnMgdG8gdGhlIHByaXNtaWMgc2VydmVyXG5sZXQgTUFYX0NPTk5FQ1RJT05TOiBudW1iZXIgPSAyMDtcbi8vIE51bWJlciBvZiByZXF1ZXN0cyBjdXJyZW50bHkgcnVubmluZyAoY2FwcGVkIGJ5IE1BWF9DT05ORUNUSU9OUylcbmxldCBydW5uaW5nOiBudW1iZXIgPSAwO1xuLy8gUmVxdWVzdHMgaW4gcXVldWVcbmxldCBxdWV1ZTogYW55W10gID0gW107XG5cbmludGVyZmFjZSBJUmVxdWVzdENhbGxiYWNrIHt9XG5cbmludGVyZmFjZSBJUmVxdWVzdENhbGxiYWNrU3VjY2VzcyBleHRlbmRzIElSZXF1ZXN0Q2FsbGJhY2sge1xuICByZXN1bHQ6IGFueTtcbiAgeGhyOiBhbnk7XG4gIHR0bCA/OiBudW1iZXI7XG59XG5cbmludGVyZmFjZSBJUmVxdWVzdENhbGxiYWNrRmFpbHVyZSBleHRlbmRzIElSZXF1ZXN0Q2FsbGJhY2sge1xuICBlcnJvcjogRXJyb3Jcbn1cblxuXG5mdW5jdGlvbiBmZXRjaFJlcXVlc3QoXG4gIHVybDogc3RyaW5nLFxuICBvblN1Y2Nlc3M6IChfOiBJUmVxdWVzdENhbGxiYWNrU3VjY2VzcykgPT4gdm9pZCxcbiAgb25FcnJvcjogKF86IElSZXF1ZXN0Q2FsbGJhY2tGYWlsdXJlKSA9PiB2b2lkXG4pOiBhbnkge1xuICBmZXRjaCh1cmwsIHtcbiAgICBoZWFkZXJzOiB7XG4gICAgICAnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgJ1VzZXItQWdlbnQnOiAnUHJpc21pYy1qYXZhc2NyaXB0LWtpdCdcbiAgICB9XG4gIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgaWYgKH5+KHJlc3BvbnNlLnN0YXR1cyAvIDEwMCAhPSAyKSkge1xuICAgICAgdGhyb3cgY3JlYXRlRXJyb3IocmVzcG9uc2Uuc3RhdHVzLCBcIlVuZXhwZWN0ZWQgc3RhdHVzIGNvZGUgW1wiICsgcmVzcG9uc2Uuc3RhdHVzICsgXCJdIG9uIFVSTCBcIiArIHVybCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCkudGhlbihmdW5jdGlvbihqc29uKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgcmVzcG9uc2U6IHJlc3BvbnNlLFxuICAgICAgICAgIGpzb246IGpzb25cbiAgICAgICAgfTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSkudGhlbihmdW5jdGlvbihuZXh0OiBhbnkpIHtcbiAgICB2YXIgcmVzcG9uc2UgPSBuZXh0LnJlc3BvbnNlO1xuICAgIHZhciBqc29uID0gbmV4dC5qc29uO1xuICAgIHZhciBjYWNoZUNvbnRyb2wgPSByZXNwb25zZS5oZWFkZXJzWydjYWNoZS1jb250cm9sJ107XG4gICAgY29uc3QgcGFyc2VkQ2FjaGVDb250cm9sOiBzdHJpbmdbXSB8IG51bGwgPSBjYWNoZUNvbnRyb2wgPyAvbWF4LWFnZT0oXFxkKykvLmV4ZWMoY2FjaGVDb250cm9sKSA6IG51bGw7XG4gICAgdmFyIHR0bCA9IHBhcnNlZENhY2hlQ29udHJvbCA/IHBhcnNlSW50KHBhcnNlZENhY2hlQ29udHJvbFsxXSwgMTApIDogdW5kZWZpbmVkO1xuICAgIG9uU3VjY2Vzcyh7cmVzdWx0OiBqc29uLCB4aHI6IHJlc3BvbnNlLCB0dGx9IGFzIElSZXF1ZXN0Q2FsbGJhY2tTdWNjZXNzKTtcbiAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yOiBFcnJvcikge1xuICAgIG9uRXJyb3Ioe2Vycm9yfSBhcyBJUmVxdWVzdENhbGxiYWNrRmFpbHVyZSk7XG4gIH0pO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIElSZXF1ZXN0SGFuZGxlciB7XG4gIHJlcXVlc3QodXJsOiBTdHJpbmcsIGNiOiAoZXJyb3I6IEVycm9yIHwgbnVsbCwgcmVzdWx0PzogYW55LCB4aHI/OiBhbnkpID0+IHZvaWQpOiB2b2lkXG59XG5cbmZ1bmN0aW9uIHByb2Nlc3NRdWV1ZSgpIHtcbiAgaWYgKHF1ZXVlLmxlbmd0aCA9PT0gMCB8fCBydW5uaW5nID49IE1BWF9DT05ORUNUSU9OUykge1xuICAgIHJldHVybjtcbiAgfVxuICBydW5uaW5nKys7XG4gIHZhciBuZXh0ID0gcXVldWUuc2hpZnQoKTtcbiAgXG4gIGZldGNoUmVxdWVzdChuZXh0LnVybCxcbiAgICBmdW5jdGlvbih7cmVzdWx0LCB4aHIsIHR0bH06IElSZXF1ZXN0Q2FsbGJhY2tTdWNjZXNzKSB7XG4gICAgICBydW5uaW5nLS07XG4gICAgICBuZXh0LmNhbGxiYWNrKG51bGwsIHJlc3VsdCwgeGhyLCB0dGwpO1xuICAgICAgcHJvY2Vzc1F1ZXVlKCk7XG4gICAgfSxcbiAgICBmdW5jdGlvbih7ZXJyb3J9OiBJUmVxdWVzdENhbGxiYWNrRmFpbHVyZSkge1xuICAgICAgbmV4dC5jYWxsYmFjayhlcnJvcik7XG4gICAgfVxuICApO1xufVxuXG5leHBvcnQgY2xhc3MgRGVmYXVsdFJlcXVlc3RIYW5kbGVyIGltcGxlbWVudHMgSVJlcXVlc3RIYW5kbGVyIHtcbiAgcmVxdWVzdCh1cmw6IFN0cmluZywgY2I6IChlcnJvcjogRXJyb3IgfCBudWxsLCByZXN1bHQ/OiBhbnksIHhocj86IGFueSwgdHRsPzogbnVtYmVyKSA9PiB2b2lkKTogdm9pZCB7XG4gICAgcXVldWUucHVzaCh7XG4gICAgICAndXJsJzogdXJsLFxuICAgICAgJ2NhbGxiYWNrJzogY2JcbiAgICB9KTtcbiAgICBwcm9jZXNzUXVldWUoKTtcbiAgfVxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL3JlcXVlc3QudHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWVBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQUE7QUFRQTtBQVBBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQVJBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 9 */
/* unknown exports provided */
/* all exports used */
/*!*********************************!*\
  !*** ./~/whatwg-fetch/fetch.js ***!
  \*********************************/
/***/ (function(module, exports) {

eval("(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 10 */
/* unknown exports provided */
/* all exports used */
/*!****************************!*\
  !*** multi ./src/index.ts ***!
  \****************************/
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /development/workspace/javascript-kit-v2/src/index.ts */2);


/***/ })
/******/ ]);
});