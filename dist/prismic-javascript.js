(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("prismic-javascript", [], factory);
	else if(typeof exports === 'object')
		exports["prismic-javascript"] = factory();
	else
		root["prismic-javascript"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 1);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/* unknown exports provided */
/* all exports used */
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar api_1 = __webpack_require__(/*! ./api */ 3);\nvar defaultOptions = {};\nfunction getApi(url, options) {\n    if (options === void 0) { options = defaultOptions; }\n    return new api_1.Api(url, options);\n}\n// \"use strict\";\n// var experiments = require('./experiments'),\n//     Predicates = require('./predicates'),\n//     api = require('./api'),\n//     QuickRoutes = require('./quickRoutes'),\n//     documents = require('./documents');\n// var Api = api.Api,\n//     Experiments = experiments.Experiments;\n// function getApi(url, options) {\n//   options = options || {};\n//   var api = new Api(url, options || {});\n//   //Use cached api data if available\n//   return new Promise(function(resolve, reject) {\n//     var cb = function(err, value, xhr) {\n//       if (options.complete) options.complete(err, value, xhr);\n//       if (err) {\n//         reject(err);\n//       } else {\n//         resolve(value);\n//       }\n//     };\n//     api.get(function (err, data) {\n//       if (!err && data) {\n//         api.data = data;\n//         api.bookmarks = data.bookmarks;\n//         api.experiments = new Experiments(data.experiments);\n//       }\n//       cb(err, api);\n//     });\n//     return api;\n//   });\n// }\n// module.exports = {\n//   experimentCookie: api.experimentCookie,\n//   previewCookie: api.previewCookie,\n//   Document: documents.Document,\n//   SearchForm: api.SearchForm,\n//   Form: api.Form,\n//   Experiments: Experiments,\n//   Predicates: Predicates,\n//   QuickRoutes: QuickRoutes,\n//   api: getApi\n// };\n// module.exports.Prismic = module.exports; // Backward compatibility\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9pbmRleC50cz9lYWMzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERvY3VtZW50LCBHcm91cERvYyB9IGZyb20gXCIuL2RvY3VtZW50c1wiO1xuaW1wb3J0IHsgSUFwaSwgSUFwaU9wdGlvbnMsIElBcGlFcnJvciwgQXBpIH0gZnJvbSBcIi4vYXBpXCI7XG5cbmNvbnN0IGRlZmF1bHRPcHRpb25zOiBJQXBpT3B0aW9ucyA9IHt9XG5cbmZ1bmN0aW9uIGdldEFwaSh1cmw6IFN0cmluZywgb3B0aW9uczogSUFwaU9wdGlvbnMgPSBkZWZhdWx0T3B0aW9ucyk6IElBcGkgfCBBcGlFcnJvciB7XG4gIHJldHVybiBuZXcgQXBpKHVybCwgb3B0aW9ucylcbn1cblxuXG5cbi8vIFwidXNlIHN0cmljdFwiO1xuXG4vLyB2YXIgZXhwZXJpbWVudHMgPSByZXF1aXJlKCcuL2V4cGVyaW1lbnRzJyksXG4vLyAgICAgUHJlZGljYXRlcyA9IHJlcXVpcmUoJy4vcHJlZGljYXRlcycpLFxuLy8gICAgIGFwaSA9IHJlcXVpcmUoJy4vYXBpJyksXG4vLyAgICAgUXVpY2tSb3V0ZXMgPSByZXF1aXJlKCcuL3F1aWNrUm91dGVzJyksXG4vLyAgICAgZG9jdW1lbnRzID0gcmVxdWlyZSgnLi9kb2N1bWVudHMnKTtcblxuLy8gdmFyIEFwaSA9IGFwaS5BcGksXG4vLyAgICAgRXhwZXJpbWVudHMgPSBleHBlcmltZW50cy5FeHBlcmltZW50cztcblxuXG4vLyBmdW5jdGlvbiBnZXRBcGkodXJsLCBvcHRpb25zKSB7XG4vLyAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuXG4vLyAgIHZhciBhcGkgPSBuZXcgQXBpKHVybCwgb3B0aW9ucyB8fCB7fSk7XG4vLyAgIC8vVXNlIGNhY2hlZCBhcGkgZGF0YSBpZiBhdmFpbGFibGVcbi8vICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuLy8gICAgIHZhciBjYiA9IGZ1bmN0aW9uKGVyciwgdmFsdWUsIHhocikge1xuLy8gICAgICAgaWYgKG9wdGlvbnMuY29tcGxldGUpIG9wdGlvbnMuY29tcGxldGUoZXJyLCB2YWx1ZSwgeGhyKTtcbi8vICAgICAgIGlmIChlcnIpIHtcbi8vICAgICAgICAgcmVqZWN0KGVycik7XG4vLyAgICAgICB9IGVsc2Uge1xuLy8gICAgICAgICByZXNvbHZlKHZhbHVlKTtcbi8vICAgICAgIH1cbi8vICAgICB9O1xuLy8gICAgIGFwaS5nZXQoZnVuY3Rpb24gKGVyciwgZGF0YSkge1xuLy8gICAgICAgaWYgKCFlcnIgJiYgZGF0YSkge1xuLy8gICAgICAgICBhcGkuZGF0YSA9IGRhdGE7XG4vLyAgICAgICAgIGFwaS5ib29rbWFya3MgPSBkYXRhLmJvb2ttYXJrcztcbi8vICAgICAgICAgYXBpLmV4cGVyaW1lbnRzID0gbmV3IEV4cGVyaW1lbnRzKGRhdGEuZXhwZXJpbWVudHMpO1xuLy8gICAgICAgfVxuXG4vLyAgICAgICBjYihlcnIsIGFwaSk7XG4vLyAgICAgfSk7XG5cbi8vICAgICByZXR1cm4gYXBpO1xuLy8gICB9KTtcbi8vIH1cblxuLy8gbW9kdWxlLmV4cG9ydHMgPSB7XG4vLyAgIGV4cGVyaW1lbnRDb29raWU6IGFwaS5leHBlcmltZW50Q29va2llLFxuLy8gICBwcmV2aWV3Q29va2llOiBhcGkucHJldmlld0Nvb2tpZSxcbi8vICAgRG9jdW1lbnQ6IGRvY3VtZW50cy5Eb2N1bWVudCxcbi8vICAgU2VhcmNoRm9ybTogYXBpLlNlYXJjaEZvcm0sXG4vLyAgIEZvcm06IGFwaS5Gb3JtLFxuLy8gICBFeHBlcmltZW50czogRXhwZXJpbWVudHMsXG4vLyAgIFByZWRpY2F0ZXM6IFByZWRpY2F0ZXMsXG4vLyAgIFF1aWNrUm91dGVzOiBRdWlja1JvdXRlcyxcbi8vICAgYXBpOiBnZXRBcGlcbi8vIH07XG5cbi8vIG1vZHVsZS5leHBvcnRzLlByaXNtaWMgPSBtb2R1bGUuZXhwb3J0czsgLy8gQmFja3dhcmQgY29tcGF0aWJpbGl0eVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2luZGV4LnRzIl0sIm1hcHBpbmdzIjoiOztBQUNBO0FBRUE7QUFFQTtBQUFBO0FBQ0E7QUFDQTtBQUlBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFHQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 1 */
/* unknown exports provided */
/* all exports used */
/*!****************************!*\
  !*** multi ./src/index.ts ***!
  \****************************/
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /development/workspace/javascript-kit-v2/src/index.ts */0);


/***/ }),
/* 2 */,
/* 3 */
/* unknown exports provided */
/* all exports used */
/*!********************!*\
  !*** ./src/api.ts ***!
  \********************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar cache_1 = __webpack_require__(/*! ./cache */ 4);\nvar request_1 = __webpack_require__(/*! ./request */ 8);\nvar Api = (function () {\n    function Api(url, options) {\n        this.url = url;\n        this.accessToken = options.accessToken;\n        this.apiCache = options.apiCache || new cache_1.ApiCache();\n        this.requestHandler = options.requestHandler || new request_1.DefaultRequestHandler();\n        this.apiCacheKey = \"\" + url + (options.accessToken ? \"#\" + options.accessToken : \"\");\n        this.callback = options.callback;\n        this.apiDataTTL = options.apiDataTTL || 5;\n    }\n    return Api;\n}());\nexports.Api = Api;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9hcGkudHM/OTJlZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJQXBpQ2FjaGUsIEFwaUNhY2hlIH0gZnJvbSBcIi4vY2FjaGVcIjtcbmltcG9ydCB7IElSZXF1ZXN0SGFuZGxlciwgRGVmYXVsdFJlcXVlc3RIYW5kbGVyIH0gZnJvbSBcIi4vcmVxdWVzdFwiO1xuZXhwb3J0IGludGVyZmFjZSBJQXBpIHtcbiAgXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSUFwaUVycm9yIHtcbiAgXzogYW55XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSUFwaU9wdGlvbnMge1xuICBjYWxsYmFjayA/OiAoZXJyb3I6IElBcGlFcnJvciwgYXBpOiBJQXBpKSA9PiB2b2lkO1xuICBhY2Nlc3NUb2tlbiA/OiBzdHJpbmc7XG4gIGFwaUNhY2hlID86IElBcGlDYWNoZTtcbiAgcmVxdWVzdEhhbmRsZXIgPzogSVJlcXVlc3RIYW5kbGVyO1xuICBhcGlEYXRhVFRMID86IG51bWJlcjtcbn1cblxuZXhwb3J0IGNsYXNzIEFwaSBpbXBsZW1lbnRzIElBcGkge1xuICB1cmw6IFN0cmluZztcbiAgY2FsbGJhY2sgPzogKGVycm9yOiBJQXBpRXJyb3IsIGFwaTogSUFwaSkgPT4gdm9pZDtcbiAgYWNjZXNzVG9rZW4gPzogc3RyaW5nO1xuICBhcGlDYWNoZSA/OiBJQXBpQ2FjaGU7XG4gIHJlcXVlc3RIYW5kbGVyOiBJUmVxdWVzdEhhbmRsZXI7XG4gIGFwaURhdGFUVEwgPzogbnVtYmVyO1xuICBhcGlDYWNoZUtleTogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKHVybDogU3RyaW5nLCBvcHRpb25zOiBJQXBpT3B0aW9ucykge1xuICAgIHRoaXMudXJsID0gdXJsO1xuICAgIHRoaXMuYWNjZXNzVG9rZW4gPSBvcHRpb25zLmFjY2Vzc1Rva2VuO1xuICAgIHRoaXMuYXBpQ2FjaGUgPSBvcHRpb25zLmFwaUNhY2hlIHx8IG5ldyBBcGlDYWNoZSgpO1xuICAgIHRoaXMucmVxdWVzdEhhbmRsZXIgPSBvcHRpb25zLnJlcXVlc3RIYW5kbGVyIHx8IG5ldyBEZWZhdWx0UmVxdWVzdEhhbmRsZXIoKTtcbiAgICB0aGlzLmFwaUNhY2hlS2V5ID0gYCR7dXJsfSR7b3B0aW9ucy5hY2Nlc3NUb2tlbiA/IGAjJHtvcHRpb25zLmFjY2Vzc1Rva2VufWAgOiBcIlwifWA7XG4gICAgdGhpcy5jYWxsYmFjayA9IG9wdGlvbnMuY2FsbGJhY2s7XG4gICAgdGhpcy5hcGlEYXRhVFRMID0gb3B0aW9ucy5hcGlEYXRhVFRMIHx8IDU7XG4gIH1cblxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9hcGkudHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQTtBQWlCQTtBQVNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQUE7QUFuQkE7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 4 */
/* unknown exports provided */
/* all exports used */
/*!**********************!*\
  !*** ./src/cache.ts ***!
  \**********************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar lru_1 = __webpack_require__(/*! ./lru */ 5);\nvar ApiCache = (function () {\n    function ApiCache(limit) {\n        this.lru = lru_1.MakeLRUCache(limit);\n    }\n    ApiCache.prototype.isExpired = function (key) {\n        var entryValue = this.lru.get(key, false);\n        if (entryValue) {\n            return entryValue.expiredIn !== 0 && entryValue.expiredIn < Date.now();\n        }\n        else {\n            return false;\n        }\n    };\n    ApiCache.prototype.get = function (key, cb) {\n        var entryValue = this.lru.get(key, false);\n        if (entryValue && !this.isExpired(key)) {\n            cb(entryValue.data);\n        }\n        cb();\n    };\n    ApiCache.prototype.set = function (key, value, ttl, cb) {\n        this.lru.remove(key);\n        this.lru.put(key, {\n            data: value,\n            expiredIn: ttl ? (Date.now() + (ttl * 1000)) : 0\n        });\n    };\n    ApiCache.prototype.remove = function (key, cb) {\n        this.lru.remove(key);\n        cb();\n    };\n    ApiCache.prototype.clear = function (cb) {\n        this.lru.removeAll();\n        cb();\n    };\n    return ApiCache;\n}());\nexports.ApiCache = ApiCache;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9jYWNoZS50cz84N2I3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElMUlVDYWNoZSwgTWFrZUxSVUNhY2hlIH0gZnJvbSAnLi9scnUnO1xuXG5leHBvcnQgaW50ZXJmYWNlIElBcGlDYWNoZSB7XG4gIGlzRXhwaXJlZDogKGtleTogU3RyaW5nKSA9PiBib29sZWFuO1xuICBnZXQ6IChrZXk6IHN0cmluZywgY2I6IChlbnRyeSA/OiBhbnkpID0+IGFueSkgPT4gdm9pZDtcbiAgc2V0OiAoa2V5OiBzdHJpbmcsIHZhbHVlOiBhbnksIHR0bDogbnVtYmVyLCBjYjogKCkgPT4gYW55KSA9PiB2b2lkO1xuICByZW1vdmU6IChrZXk6IHN0cmluZywgY2I6ICgpID0+IGFueSkgPT4gdm9pZDtcbiAgY2xlYXI6IChjYjogKCkgPT4gYW55KSA9PiB2b2lkO1xufVxuXG5leHBvcnQgY2xhc3MgQXBpQ2FjaGUgaW1wbGVtZW50cyBJQXBpQ2FjaGUge1xuICBscnU6IElMUlVDYWNoZTtcblxuICBjb25zdHJ1Y3RvcihsaW1pdCA/OiBudW1iZXIpIHtcbiAgICB0aGlzLmxydSA9IE1ha2VMUlVDYWNoZShsaW1pdCk7XG4gIH1cblxuICBpc0V4cGlyZWQoa2V5OiBzdHJpbmcpOiBib29sZWFuIHtcbiAgICBjb25zdCBlbnRyeVZhbHVlID0gdGhpcy5scnUuZ2V0KGtleSwgZmFsc2UpO1xuICAgIGlmKGVudHJ5VmFsdWUpIHtcbiAgICAgIHJldHVybiBlbnRyeVZhbHVlLmV4cGlyZWRJbiAhPT0gMCAmJiBlbnRyeVZhbHVlLmV4cGlyZWRJbiA8IERhdGUubm93KCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBnZXQoa2V5OiBzdHJpbmcsIGNiOiAoZW50cnkgPzogYW55KSA9PiBhbnkpOiB2b2lkIHtcbiAgICBjb25zdCBlbnRyeVZhbHVlID0gdGhpcy5scnUuZ2V0KGtleSwgZmFsc2UpO1xuICAgIGlmKGVudHJ5VmFsdWUgJiYgIXRoaXMuaXNFeHBpcmVkKGtleSkpIHtcbiAgICAgIGNiKGVudHJ5VmFsdWUuZGF0YSk7XG4gICAgfVxuICAgIGNiKCk7XG4gIH1cblxuICBzZXQoa2V5OiBzdHJpbmcsIHZhbHVlOiBhbnksIHR0bDogbnVtYmVyLCBjYjogKCkgPT4gYW55KTogdm9pZCB7XG4gICAgdGhpcy5scnUucmVtb3ZlKGtleSk7XG4gICAgdGhpcy5scnUucHV0KGtleSwge1xuICAgICAgZGF0YTogdmFsdWUsXG4gICAgICBleHBpcmVkSW46IHR0bCA/IChEYXRlLm5vdygpICsgKHR0bCAqIDEwMDApKSA6IDBcbiAgICB9KVxuICB9XG5cbiAgcmVtb3ZlKGtleTogc3RyaW5nLCBjYjogKCkgPT4gYW55KTogdm9pZCB7XG4gICAgdGhpcy5scnUucmVtb3ZlKGtleSk7XG4gICAgY2IoKTtcbiAgfVxuICBjbGVhcihjYjogKCkgPT4gYW55KTogdm9pZCB7XG4gICAgdGhpcy5scnUucmVtb3ZlQWxsKCk7XG4gICAgY2IoKTtcbiAgfVxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2NhY2hlLnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBO0FBVUE7QUFHQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUF4Q0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 5 */
/* unknown exports provided */
/* all exports used */
/*!********************!*\
  !*** ./src/lru.ts ***!
  \********************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n* A doubly linked list-based Least Recently Used (LRU) cache. Will keep most\n* recently used items while discarding least recently used items when its limit\n* is reached.\n*\n* Licensed under MIT. Copyright (c) 2010 Rasmus Andersson <http://hunch.se/>\n* Typescript-ified by Oleksandr Nikitin <https://tvori.info>\n*\n* Illustration of the design:\n*\n*       entry             entry             entry             entry\n*       ______            ______            ______            ______\n*      | head |.newer => |      |.newer => |      |.newer => | tail |\n*      |  A   |          |  B   |          |  C   |          |  D   |\n*      |______| <= older.|______| <= older.|______| <= older.|______|\n*\n*  removed  <--  <--  <--  <--  <--  <--  <--  <--  <--  <--  <--  added\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction MakeLRUCache(limit) {\n    return new LRUCache(limit);\n}\nexports.MakeLRUCache = MakeLRUCache;\nfunction LRUCache(limit) {\n    // Current size of the cache. (Read-only).\n    this.size = 0;\n    // Maximum number of items this cache can hold.\n    this.limit = limit;\n    this._keymap = {};\n}\n/**\n * Put <value> into the cache associated with <key>. Returns the entry which was\n * removed to make room for the new entry. Otherwise undefined is returned\n * (i.e. if there was enough room already).\n */\nLRUCache.prototype.put = function (key, value) {\n    var entry = { key: key, value: value };\n    // Note: No protection agains replacing, and thus orphan entries. By design.\n    this._keymap[key] = entry;\n    if (this.tail) {\n        // link previous tail to the new tail (entry)\n        this.tail.newer = entry;\n        entry.older = this.tail;\n    }\n    else {\n        // we're first in -- yay\n        this.head = entry;\n    }\n    // add new entry to the end of the linked list -- it's now the freshest entry.\n    this.tail = entry;\n    if (this.size === this.limit) {\n        // we hit the limit -- remove the head\n        return this.shift();\n    }\n    else {\n        // increase the size counter\n        this.size++;\n    }\n};\n/**\n * Purge the least recently used (oldest) entry from the cache. Returns the\n * removed entry or undefined if the cache was empty.\n *\n * If you need to perform any form of finalization of purged items, this is a\n * good place to do it. Simply override/replace this function:\n *\n *   var c = new LRUCache(123);\n *   c.shift = function() {\n *     var entry = LRUCache.prototype.shift.call(this);\n *     doSomethingWith(entry);\n *     return entry;\n *   }\n */\nLRUCache.prototype.shift = function () {\n    // todo: handle special case when limit == 1\n    var entry = this.head;\n    if (entry) {\n        if (this.head.newer) {\n            this.head = this.head.newer;\n            this.head.older = undefined;\n        }\n        else {\n            this.head = undefined;\n        }\n        // Remove last strong reference to <entry> and remove links from the purged\n        // entry being returned:\n        entry.newer = entry.older = undefined;\n        // delete is slow, but we need to do this to avoid uncontrollable growth:\n        delete this._keymap[entry.key];\n    }\n    console.log('purging ', entry.key);\n    return entry;\n};\n/**\n * Get and register recent use of <key>. Returns the value associated with <key>\n * or undefined if not in cache.\n */\nLRUCache.prototype.get = function (key, returnEntry) {\n    // First, find our cache entry\n    var entry = this._keymap[key];\n    if (entry === undefined)\n        return; // Not cached. Sorry.\n    // As <key> was found in the cache, register it as being requested recently\n    if (entry === this.tail) {\n        // Already the most recently used entry, so no need to update the list\n        return returnEntry ? entry : entry.value;\n    }\n    // HEAD--------------TAIL\n    //   <.older   .newer>\n    //  <--- add direction --\n    //   A  B  C  <D>  E\n    if (entry.newer) {\n        if (entry === this.head)\n            this.head = entry.newer;\n        entry.newer.older = entry.older; // C <-- E.\n    }\n    if (entry.older)\n        entry.older.newer = entry.newer; // C. --> E\n    entry.newer = undefined; // D --x\n    entry.older = this.tail; // D. --> E\n    if (this.tail)\n        this.tail.newer = entry; // E. <-- D\n    this.tail = entry;\n    return returnEntry ? entry : entry.value;\n};\n// ----------------------------------------------------------------------------\n// Following code is optional and can be removed without breaking the core\n// functionality.\n/**\n * Check if <key> is in the cache without registering recent use. Feasible if\n * you do not want to chage the state of the cache, but only \"peek\" at it.\n * Returns the entry associated with <key> if found, or undefined if not found.\n */\nLRUCache.prototype.find = function (key) {\n    return this._keymap[key];\n};\n/**\n * Update the value of entry with <key>. Returns the old value, or undefined if\n * entry was not in the cache.\n */\nLRUCache.prototype.set = function (key, value) {\n    var oldvalue;\n    var entry = this.get(key, true);\n    if (entry) {\n        oldvalue = entry.value;\n        entry.value = value;\n    }\n    else {\n        oldvalue = this.put(key, value);\n        if (oldvalue)\n            oldvalue = oldvalue.value;\n    }\n    return oldvalue;\n};\n/**\n * Remove entry <key> from cache and return its value. Returns undefined if not\n * found.\n */\nLRUCache.prototype.remove = function (key) {\n    var entry = this._keymap[key];\n    if (!entry)\n        return;\n    delete this._keymap[entry.key]; // need to do delete unfortunately\n    if (entry.newer && entry.older) {\n        // relink the older entry with the newer entry\n        entry.older.newer = entry.newer;\n        entry.newer.older = entry.older;\n    }\n    else if (entry.newer) {\n        // remove the link to us\n        entry.newer.older = undefined;\n        // link the newer entry to head\n        this.head = entry.newer;\n    }\n    else if (entry.older) {\n        // remove the link to us\n        entry.older.newer = undefined;\n        // link the newer entry to head\n        this.tail = entry.older;\n    }\n    else {\n        this.head = this.tail = undefined;\n    }\n    this.size--;\n    return entry.value;\n};\n/** Removes all entries */\nLRUCache.prototype.removeAll = function () {\n    // This should be safe, as we never expose strong refrences to the outside\n    this.head = this.tail = undefined;\n    this.size = 0;\n    this._keymap = {};\n};\n/**\n * Return an array containing all keys of entries stored in the cache object, in\n * arbitrary order.\n */\nif (typeof Object.keys === 'function') {\n    LRUCache.prototype.keys = function () { return Object.keys(this._keymap); };\n}\nelse {\n    LRUCache.prototype.keys = function () {\n        var keys = [];\n        for (var k in this._keymap)\n            keys.push(k);\n        return keys;\n    };\n}\n/**\n * Call `fun` for each entry. Starting with the newest entry if `desc` is a true\n * value, otherwise starts with the oldest (head) enrty and moves towards the\n * tail.\n *\n * `fun` is called with 3 arguments in the context `context`:\n *   `fun.call(context, Object key, Object value, LRUCache self)`\n */\nLRUCache.prototype.forEach = function (fun, context, desc) {\n    var entry;\n    if (context === true) {\n        desc = true;\n        context = undefined;\n    }\n    else if (typeof context !== 'object')\n        context = this;\n    if (desc) {\n        entry = this.tail;\n        while (entry) {\n            fun.call(context, entry.key, entry.value, this);\n            entry = entry.older;\n        }\n    }\n    else {\n        entry = this.head;\n        while (entry) {\n            fun.call(context, entry.key, entry.value, this);\n            entry = entry.newer;\n        }\n    }\n};\n/** Returns a JSON (array) representation */\n//LRUCache.prototype.toJSON = function () {\n//    var s: IEntry[] = [], entry = this.head;\n//    while (entry) {\n//        s.push({ key: entry.key.toJSON(), value: entry.value.toJSON() });\n//        entry = entry.newer;\n//    }\n//    return s;\n//};\n/** Returns a String representation */\nLRUCache.prototype.toString = function () {\n    var s = '', entry = this.head;\n    while (entry) {\n        s += String(entry.key) + ':' + entry.value;\n        entry = entry.newer;\n        if (entry)\n            s += ' < ';\n    }\n    return s;\n};\n// Export ourselves\n//if (typeof this === 'object') this.LRUCache = LRUCache; \n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 6 */,
/* 7 */
/* unknown exports provided */
/* all exports used */
/*!****************************************************!*\
  !*** ./~/isomorphic-fetch/fetch-npm-browserify.js ***!
  \****************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("// the whatwg-fetch polyfill installs the fetch() function\n// on the global object (window or self)\n//\n// Return that as the export for use in Webpack, Browserify etc.\n__webpack_require__(/*! whatwg-fetch */ 9);\nmodule.exports = self.fetch.bind(self);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vaXNvbW9ycGhpYy1mZXRjaC9mZXRjaC1ucG0tYnJvd3NlcmlmeS5qcz83NzIzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHRoZSB3aGF0d2ctZmV0Y2ggcG9seWZpbGwgaW5zdGFsbHMgdGhlIGZldGNoKCkgZnVuY3Rpb25cbi8vIG9uIHRoZSBnbG9iYWwgb2JqZWN0ICh3aW5kb3cgb3Igc2VsZilcbi8vXG4vLyBSZXR1cm4gdGhhdCBhcyB0aGUgZXhwb3J0IGZvciB1c2UgaW4gV2VicGFjaywgQnJvd3NlcmlmeSBldGMuXG5yZXF1aXJlKCd3aGF0d2ctZmV0Y2gnKTtcbm1vZHVsZS5leHBvcnRzID0gc2VsZi5mZXRjaC5iaW5kKHNlbGYpO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2lzb21vcnBoaWMtZmV0Y2gvZmV0Y2gtbnBtLWJyb3dzZXJpZnkuanNcbi8vIG1vZHVsZSBpZCA9IDdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 8 */
/* unknown exports provided */
/* all exports used */
/*!************************!*\
  !*** ./src/request.ts ***!
  \************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__webpack_require__(/*! isomorphic-fetch */ 7);\nvar package_json_1 = __webpack_require__(/*! ../package.json */ 10);\nfunction createError(status, message) {\n    return {\n        name: \"prismic-request-error\",\n        message: message,\n        status: status\n    };\n}\n// Number of maximum simultaneous connections to the prismic server\nvar MAX_CONNECTIONS = 20;\n// Number of requests currently running (capped by MAX_CONNECTIONS)\nvar running = 0;\n// Requests in queue\nvar queue = [];\nfunction fetchRequest(url, onSuccess, onError) {\n    fetch(url, {\n        headers: {\n            'Accept': 'application/json',\n            'User-Agent': \"Prismic-javascript-kit/\" + package_json_1.default.version\n        }\n    }).then(function (response) {\n        if (~~(response.status / 100 != 2)) {\n            throw createError(response.status, \"Unexpected status code [\" + response.status + \"] on URL \" + url);\n        }\n        else {\n            return response.json().then(function (json) {\n                return {\n                    response: response,\n                    json: json\n                };\n            });\n        }\n    }).then(function (next) {\n        var response = next.response;\n        var json = next.json;\n        var cacheControl = response.headers['cache-control'];\n        var parsedCacheControl = cacheControl ? /max-age=(\\d+)/.exec(cacheControl) : null;\n        var ttl = parsedCacheControl ? parseInt(parsedCacheControl[1], 10) : undefined;\n        onSuccess({ result: json, xhr: response, ttl: ttl });\n    }).catch(function (error) {\n        onError({ error: error });\n    });\n}\nfunction processQueue() {\n    if (queue.length === 0 || running >= MAX_CONNECTIONS) {\n        return;\n    }\n    running++;\n    var next = queue.shift();\n    fetchRequest(next.url, function (_a) {\n        var result = _a.result, xhr = _a.xhr, ttl = _a.ttl;\n        running--;\n        next.callback(result, xhr, ttl);\n        processQueue();\n    }, function (_a) {\n        var error = _a.error;\n        console.log(error);\n    });\n}\nvar DefaultRequestHandler = (function () {\n    function DefaultRequestHandler() {\n    }\n    DefaultRequestHandler.prototype.request = function (url, cb) {\n        queue.push({\n            'url': url,\n            'callback': cb\n        });\n        processQueue();\n    };\n    return DefaultRequestHandler;\n}());\nexports.DefaultRequestHandler = DefaultRequestHandler;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9yZXF1ZXN0LnRzPzliNTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFwiaXNvbW9ycGhpYy1mZXRjaFwiO1xuaW1wb3J0IHBqc29uIGZyb20gXCIuLi9wYWNrYWdlLmpzb25cIjtcblxuZXhwb3J0IGludGVyZmFjZSBJUmVxdWVzdEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICBzdGF0dXM6IG51bWJlcjtcbn1cblxuZnVuY3Rpb24gY3JlYXRlRXJyb3Ioc3RhdHVzOiBudW1iZXIsIG1lc3NhZ2U6IHN0cmluZyk6IElSZXF1ZXN0RXJyb3Ige1xuICByZXR1cm4ge1xuICAgIG5hbWU6IFwicHJpc21pYy1yZXF1ZXN0LWVycm9yXCIsXG4gICAgbWVzc2FnZSxcbiAgICBzdGF0dXM6IHN0YXR1c1xuICB9XG59XG5cblxuLy8gTnVtYmVyIG9mIG1heGltdW0gc2ltdWx0YW5lb3VzIGNvbm5lY3Rpb25zIHRvIHRoZSBwcmlzbWljIHNlcnZlclxubGV0IE1BWF9DT05ORUNUSU9OUzogbnVtYmVyID0gMjA7XG4vLyBOdW1iZXIgb2YgcmVxdWVzdHMgY3VycmVudGx5IHJ1bm5pbmcgKGNhcHBlZCBieSBNQVhfQ09OTkVDVElPTlMpXG5sZXQgcnVubmluZzogbnVtYmVyID0gMDtcbi8vIFJlcXVlc3RzIGluIHF1ZXVlXG5sZXQgcXVldWU6IGFueVtdICA9IFtdO1xuXG5pbnRlcmZhY2UgSVJlcXVlc3RDYWxsYmFjayB7fVxuXG5pbnRlcmZhY2UgSVJlcXVlc3RDYWxsYmFja1N1Y2Nlc3MgZXh0ZW5kcyBJUmVxdWVzdENhbGxiYWNrIHtcbiAgcmVzdWx0OiBhbnk7XG4gIHhocjogYW55O1xuICB0dGwgPzogbnVtYmVyO1xufVxuXG5pbnRlcmZhY2UgSVJlcXVlc3RDYWxsYmFja0ZhaWx1cmUgZXh0ZW5kcyBJUmVxdWVzdENhbGxiYWNrIHtcbiAgZXJyb3I6IEVycm9yXG59XG5cblxuZnVuY3Rpb24gZmV0Y2hSZXF1ZXN0KFxuICB1cmw6IHN0cmluZyxcbiAgb25TdWNjZXNzOiAoXzogSVJlcXVlc3RDYWxsYmFja1N1Y2Nlc3MpID0+IHZvaWQsXG4gIG9uRXJyb3I6IChfOiBJUmVxdWVzdENhbGxiYWNrRmFpbHVyZSkgPT4gdm9pZFxuKTogYW55IHtcbiAgZmV0Y2godXJsLCB7XG4gICAgaGVhZGVyczoge1xuICAgICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICdVc2VyLUFnZW50JzogYFByaXNtaWMtamF2YXNjcmlwdC1raXQvJHtwanNvbi52ZXJzaW9ufWBcbiAgICB9XG4gIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgaWYgKH5+KHJlc3BvbnNlLnN0YXR1cyAvIDEwMCAhPSAyKSkge1xuICAgICAgdGhyb3cgY3JlYXRlRXJyb3IocmVzcG9uc2Uuc3RhdHVzLCBcIlVuZXhwZWN0ZWQgc3RhdHVzIGNvZGUgW1wiICsgcmVzcG9uc2Uuc3RhdHVzICsgXCJdIG9uIFVSTCBcIiArIHVybCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCkudGhlbihmdW5jdGlvbihqc29uKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgcmVzcG9uc2U6IHJlc3BvbnNlLFxuICAgICAgICAgIGpzb246IGpzb25cbiAgICAgICAgfTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSkudGhlbihmdW5jdGlvbihuZXh0OiBhbnkpIHtcbiAgICB2YXIgcmVzcG9uc2UgPSBuZXh0LnJlc3BvbnNlO1xuICAgIHZhciBqc29uID0gbmV4dC5qc29uO1xuICAgIHZhciBjYWNoZUNvbnRyb2wgPSByZXNwb25zZS5oZWFkZXJzWydjYWNoZS1jb250cm9sJ107XG4gICAgY29uc3QgcGFyc2VkQ2FjaGVDb250cm9sOiBzdHJpbmdbXSB8IG51bGwgPSBjYWNoZUNvbnRyb2wgPyAvbWF4LWFnZT0oXFxkKykvLmV4ZWMoY2FjaGVDb250cm9sKSA6IG51bGw7XG4gICAgdmFyIHR0bCA9IHBhcnNlZENhY2hlQ29udHJvbCA/IHBhcnNlSW50KHBhcnNlZENhY2hlQ29udHJvbFsxXSwgMTApIDogdW5kZWZpbmVkO1xuICAgIG9uU3VjY2Vzcyh7cmVzdWx0OiBqc29uLCB4aHI6IHJlc3BvbnNlLCB0dGx9IGFzIElSZXF1ZXN0Q2FsbGJhY2tTdWNjZXNzKTtcbiAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yOiBFcnJvcikge1xuICAgIG9uRXJyb3Ioe2Vycm9yfSBhcyBJUmVxdWVzdENhbGxiYWNrRmFpbHVyZSk7XG4gIH0pO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIElSZXF1ZXN0SGFuZGxlciB7XG4gIHJlcXVlc3Q6ICh1cmw6IFN0cmluZywgY2I6IChlcnJvcjogYW55LCByZXN1bHQ6IGFueSwgeGhyOiBhbnksIHR0bDogbnVtYmVyKSA9PiB2b2lkKSA9PiBhbnlcbn1cblxuZnVuY3Rpb24gcHJvY2Vzc1F1ZXVlKCkge1xuICBpZiAocXVldWUubGVuZ3RoID09PSAwIHx8IHJ1bm5pbmcgPj0gTUFYX0NPTk5FQ1RJT05TKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIHJ1bm5pbmcrKztcbiAgdmFyIG5leHQgPSBxdWV1ZS5zaGlmdCgpO1xuICBcbiAgZmV0Y2hSZXF1ZXN0KG5leHQudXJsLFxuICAgIGZ1bmN0aW9uKHtyZXN1bHQsIHhociwgdHRsfTogSVJlcXVlc3RDYWxsYmFja1N1Y2Nlc3MpIHtcbiAgICAgIHJ1bm5pbmctLTtcbiAgICAgIG5leHQuY2FsbGJhY2socmVzdWx0LCB4aHIsIHR0bCk7XG4gICAgICBwcm9jZXNzUXVldWUoKTtcbiAgICB9LFxuICAgIGZ1bmN0aW9uKHtlcnJvcn06IElSZXF1ZXN0Q2FsbGJhY2tGYWlsdXJlKSB7XG4gICAgICBjb25zb2xlLmxvZyhlcnJvcik7XG4gICAgfVxuICApO1xufVxuXG5leHBvcnQgY2xhc3MgRGVmYXVsdFJlcXVlc3RIYW5kbGVyIGltcGxlbWVudHMgSVJlcXVlc3RIYW5kbGVyIHtcbiAgcmVxdWVzdCh1cmw6IFN0cmluZywgY2I6IChlcnJvcjogYW55LCByZXN1bHQ6IGFueSwgeGhyOiBhbnksIHR0bDogbnVtYmVyKSA9PiB2b2lkKTogdm9pZCB7XG4gICAgcXVldWUucHVzaCh7XG4gICAgICAndXJsJzogdXJsLFxuICAgICAgJ2NhbGxiYWNrJzogY2JcbiAgICB9KTtcbiAgICBwcm9jZXNzUXVldWUoKTtcbiAgfVxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL3JlcXVlc3QudHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBZUE7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFBQTtBQVFBO0FBUEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBUkE7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 9 */
/* unknown exports provided */
/* all exports used */
/*!*********************************!*\
  !*** ./~/whatwg-fetch/fetch.js ***!
  \*********************************/
/***/ (function(module, exports) {

eval("(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 10 */
/* unknown exports provided */
/* all exports used */
/*!**********************!*\
  !*** ./package.json ***!
  \**********************/
/***/ (function(module, exports) {

eval("module.exports = {\n\t\"name\": \"prismic.io\",\n\t\"description\": \"JavaScript development kit for prismic.io\",\n\t\"license\": \"Apache-2.0\",\n\t\"url\": \"https://github.com/prismicio/javascript-kit\",\n\t\"keywords\": [\n\t\t\"prismic\",\n\t\t\"prismic.io\",\n\t\t\"cms\",\n\t\t\"content\",\n\t\t\"api\"\n\t],\n\t\"version\": \"3.5.5\",\n\t\"devDependencies\": {\n\t\t\"chai\": \"*\",\n\t\t\"codeclimate-test-reporter\": \"0.0.4\",\n\t\t\"ts-loader\": \"^2.0.3\",\n\t\t\"tslint\": \"^5.1.0\",\n\t\t\"tslint-loader\": \"^3.5.3\",\n\t\t\"typescript\": \"^2.3.2\",\n\t\t\"webpack\": \"^2.4.1\",\n\t\t\"yargs\": \"^7.1.0\"\n\t},\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"http://github.com/prismicio/javascript-kit.git\"\n\t},\n\t\"main\": \"dist/prismic-javascript.min.js\",\n\t\"scripts\": {\n\t\t\"build\": \"webpack --debug; webpack -p\",\n\t\t\"dev\": \"webpack -d --watch\",\n\t\t\"prepublish\": \"npm run build\",\n\t\t\"lint\": \"tslint src\",\n\t\t\"posttest\": \"tslint lib\"\n\t},\n\t\"dependencies\": {\n\t\t\"isomorphic-fetch\": \"^2.2.1\"\n\t}\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWNrYWdlLmpzb24/ZWQ4OCJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHtcblx0XCJuYW1lXCI6IFwicHJpc21pYy5pb1wiLFxuXHRcImRlc2NyaXB0aW9uXCI6IFwiSmF2YVNjcmlwdCBkZXZlbG9wbWVudCBraXQgZm9yIHByaXNtaWMuaW9cIixcblx0XCJsaWNlbnNlXCI6IFwiQXBhY2hlLTIuMFwiLFxuXHRcInVybFwiOiBcImh0dHBzOi8vZ2l0aHViLmNvbS9wcmlzbWljaW8vamF2YXNjcmlwdC1raXRcIixcblx0XCJrZXl3b3Jkc1wiOiBbXG5cdFx0XCJwcmlzbWljXCIsXG5cdFx0XCJwcmlzbWljLmlvXCIsXG5cdFx0XCJjbXNcIixcblx0XHRcImNvbnRlbnRcIixcblx0XHRcImFwaVwiXG5cdF0sXG5cdFwidmVyc2lvblwiOiBcIjMuNS41XCIsXG5cdFwiZGV2RGVwZW5kZW5jaWVzXCI6IHtcblx0XHRcImNoYWlcIjogXCIqXCIsXG5cdFx0XCJjb2RlY2xpbWF0ZS10ZXN0LXJlcG9ydGVyXCI6IFwiMC4wLjRcIixcblx0XHRcInRzLWxvYWRlclwiOiBcIl4yLjAuM1wiLFxuXHRcdFwidHNsaW50XCI6IFwiXjUuMS4wXCIsXG5cdFx0XCJ0c2xpbnQtbG9hZGVyXCI6IFwiXjMuNS4zXCIsXG5cdFx0XCJ0eXBlc2NyaXB0XCI6IFwiXjIuMy4yXCIsXG5cdFx0XCJ3ZWJwYWNrXCI6IFwiXjIuNC4xXCIsXG5cdFx0XCJ5YXJnc1wiOiBcIl43LjEuMFwiXG5cdH0sXG5cdFwicmVwb3NpdG9yeVwiOiB7XG5cdFx0XCJ0eXBlXCI6IFwiZ2l0XCIsXG5cdFx0XCJ1cmxcIjogXCJodHRwOi8vZ2l0aHViLmNvbS9wcmlzbWljaW8vamF2YXNjcmlwdC1raXQuZ2l0XCJcblx0fSxcblx0XCJtYWluXCI6IFwiZGlzdC9wcmlzbWljLWphdmFzY3JpcHQubWluLmpzXCIsXG5cdFwic2NyaXB0c1wiOiB7XG5cdFx0XCJidWlsZFwiOiBcIndlYnBhY2sgLS1kZWJ1Zzsgd2VicGFjayAtcFwiLFxuXHRcdFwiZGV2XCI6IFwid2VicGFjayAtZCAtLXdhdGNoXCIsXG5cdFx0XCJwcmVwdWJsaXNoXCI6IFwibnBtIHJ1biBidWlsZFwiLFxuXHRcdFwibGludFwiOiBcInRzbGludCBzcmNcIixcblx0XHRcInBvc3R0ZXN0XCI6IFwidHNsaW50IGxpYlwiXG5cdH0sXG5cdFwiZGVwZW5kZW5jaWVzXCI6IHtcblx0XHRcImlzb21vcnBoaWMtZmV0Y2hcIjogXCJeMi4yLjFcIlxuXHR9XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vcGFja2FnZS5qc29uXG4vLyBtb2R1bGUgaWQgPSAxMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ })
/******/ ]);
});